<?xml version="1.0" encoding="UTF-8" ?><ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3"><Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0"><bitmap>media/images/box/root.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Set Language" id="2" localization="8" tooltip="Set the language of your robot for the current application. Your robot will speak and understand the selected language as long as your application has focus. Any following call to ALSpeechRecognition (Speech Reco. box for instance), ALTextToSpeech (Say box for instance) or ALDialog will use this language.&#x0A;" x="134" y="184"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        try:
            self.tts = ALProxy("ALTextToSpeech")
        except:
            self.logger.warn("ALTextToSpeech is not available, language setting cannot be applied to speech")
            self.tts = None

        try:
            self.asr = ALProxy("ALSpeechRecognition")
        except:
            self.logger.warn("ALSpeechRecognition is not available, language setting cannot be applied to recognition")
            self.asr = None

        try:
            self.dialog = ALProxy("ALDialog")
        except:
            self.logger.warn("ALDialog is not available, language setting cannot be applied to dialog")
            self.dialog = None

    def onInput_onSet(self):
        lang = self.getParameter("Language")
        try:
            if self.asr:
                self.asr.setLanguage( self.getParameter("Language") )
            if self.tts:
                self.tts.setLanguage( self.getParameter("Language") )
            if self.dialog:
                self.dialog.setLanguage( self.getParameter("Language") )
            if self.tts is None and self.asr is None and self.dialog is None:
                raise RuntimeError("Cannot set language: neither ALTextToSpeech nor ALSpeechRecognition nor ALDialog is available.")
            self.onReady()
        except:
            error = "Language " + lang + " cannot be set."
            self.logger.warn(error)
            self.onError(error)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="The data is set when a signal is received on this input." id="2" /><Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when the data has been set." id="3" /><Output name="onError" type="3" type_size="1" nature="2" inner="0" tooltip="Error output:&#x0A;- triggered if the language asked cannot be set" id="4" /><Parameter name="Language" inherits_from_parent="0" content_type="3" value="French" default_value="English" custom_choice="1" tooltip="Set the language the robot speaks and understands." id="5"><Choice value="Arabic" /><Choice value="Brazilian" /><Choice value="Chinese" /><Choice value="Czech" /><Choice value="Danish" /><Choice value="Dutch" /><Choice value="English" /><Choice value="Finnish" /><Choice value="French" /><Choice value="German" /><Choice value="Greek" /><Choice value="Italian" /><Choice value="Japanese" /><Choice value="Korean" /><Choice value="MandarinTaiwan" /><Choice value="Norwegian" /><Choice value="Polish" /><Choice value="Portuguese" /><Choice value="Russian" /><Choice value="Spanish" /><Choice value="Swedish" /><Choice value="Turkish" /></Parameter><Resource name="Speech" type="Lock" timeout="0" /></Box><Box name="Show App" id="1" localization="8" tooltip="Loads the application on the tablet, if it exists, and displays the webview.&#x0A;&#x0A;V1.0.0&#x0A;" x="130" y="336"><bitmap>media/images/box/root.png</bitmap><script language="4"><content><![CDATA[

class MyClass(GeneratedClass):

    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.isRunning = False

    def onUnload(self):
        self.isRunning = False

    def _getTabletService(self):
        tabletService = None
        try:
            tabletService = self.session().service("ALTabletService")
        except Exception as e:
            self.logger.error(e)
        return tabletService

    def onInput_onStart(self):
        if self.isRunning:
            return # already running, nothing to do
        self.isRunning = True
        # We create TabletService here in order to avoid
        # problems with connections and disconnections of the tablet during the life of the application
        tabletService = self._getTabletService()
        appName = self.packageUid()
        state = False
        if appName:
            if tabletService:
                if tabletService.loadApplication(appName):
                    self.logger.info("Successfully set application: %s" % appName)
                    tabletService.showWebview()
                    state = True
                else:
                    self.logger.warning("Got tablet service, but failed to set application: %s" % appName)
            else:
                self.logger.warning("Couldn't find tablet service, so can't set application: %s" % appName)
        if state:
            self.onSuccess()
        else:
            self.onFailure()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onSuccess" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished successfully." id="3" /><Output name="onFailure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished unsuccessfully." id="4" /></Box><Box name="Wait" id="6" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="369" y="387"><bitmap>media/images/box/wait.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" /><Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" /><Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="3" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" /><Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" /></Box><Box name="Main" id="3" localization="8" tooltip="" x="334" y="20"><dialogFile>../dialogs/main_with_tablet.dlg</dialogFile><bitmap>media/images/box/box-dialog.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Input name="Animaux" type="1" type_size="1" nature="1" inner="0" tooltip="" id="4" /><Input name="SportsMusique" type="1" type_size="1" nature="1" inner="0" tooltip="" id="5" /><Input name="Danser" type="1" type_size="1" nature="1" inner="0" tooltip="" id="6" /><Input name="Autres" type="1" type_size="1" nature="1" inner="0" tooltip="" id="7" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="8" /><Output name="onRestart" type="1" type_size="1" nature="1" inner="0" tooltip="" id="9" /><Output name="DoElephant" type="1" type_size="1" nature="2" inner="0" tooltip="" id="10" /><Output name="DoSouris" type="1" type_size="1" nature="2" inner="0" tooltip="" id="11" /><Output name="DoGorille" type="1" type_size="1" nature="2" inner="0" tooltip="" id="12" /><Output name="DoGolf" type="1" type_size="1" nature="2" inner="0" tooltip="" id="13" /><Output name="DoFootball" type="1" type_size="1" nature="2" inner="0" tooltip="" id="14" /><Output name="DoGuitar" type="1" type_size="1" nature="2" inner="0" tooltip="" id="15" /><Output name="DoSaxophone" type="1" type_size="1" nature="2" inner="0" tooltip="" id="16" /><Output name="DoPicture" type="1" type_size="1" nature="2" inner="0" tooltip="" id="17" /><Output name="DoVacuum" type="1" type_size="1" nature="2" inner="0" tooltip="" id="18" /><Output name="DoMystical" type="1" type_size="1" nature="2" inner="0" tooltip="" id="19" /><Output name="DoTaiChi" type="1" type_size="1" nature="2" inner="0" tooltip="" id="20" /><Output name="DoDisco" type="3" type_size="1" nature="2" inner="0" tooltip="" id="21" /></Box><Box name="Elephant" id="4" localization="8" tooltip="ID : #04A 0001&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Elephant" x="597" y="32"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="180"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Play Sound" id="1" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be wav or ogg (on virtual robot) and also mp3 (on a real robot).&#x0A;&#x0A;Note: There can be some delay to play ogg or mp3 (on a robot) files. We advise you to use wav if&#x0A;you want a fast play of the file." x="130" y="43"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Parameter name="File name" inherits_from_parent="0" content_type="4" value="/elephant.ogg" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" /><Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" /><Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" /><Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" /><Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" /><Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" /><Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" /><Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" /></Box><Box name="Get Attached File" id="1" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="216" y="71"><bitmap>media/images/box/folder.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        pass

    def onInput_onStart(self):
        self.onStopped(self.behaviorAbsolutePath() + self.getParameter("File name"))]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" /><Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Audio player" type="Lock" timeout="0" /></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" /></Diagram></BehaviorKeyframe></BehaviorLayer><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="32" value="36.5" /><Key frame="59" value="8.55243" /><Key frame="94" value="36.5" /><Key frame="121" value="8.55243" /><Key frame="154" value="36.5" /><Key frame="180" value="-11.9531" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="32" value="-21.4" /><Key frame="59" value="-21.2458" /><Key frame="94" value="-21.4" /><Key frame="121" value="-21.2458" /><Key frame="154" value="-21.4" /><Key frame="180" value="-0.263673" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="25" value="-53.923" /><Key frame="52" value="-2.33683" /><Key frame="87" value="-53.923" /><Key frame="114" value="-2.33683" /><Key frame="147" value="-53.923" /><Key frame="180" value="-2.02149" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="25" value="-0.125087" /><Key frame="52" value="-0.125087" /><Key frame="87" value="-0.125087" /><Key frame="114" value="-0.125087" /><Key frame="147" value="-0.125087" /><Key frame="180" value="-0.439454" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="25" value="20.2351" /><Key frame="52" value="-0.183079" /><Key frame="87" value="20.2351" /><Key frame="114" value="-0.183079" /><Key frame="147" value="20.2351" /><Key frame="180" value="-0.439454" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="32" value="-89.5" /><Key frame="59" value="-88.6599" /><Key frame="94" value="-89.5" /><Key frame="121" value="-88.6599" /><Key frame="154" value="-89.5" /><Key frame="180" value="-29.5313" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="32" value="0" /><Key frame="59" value="1.60444" /><Key frame="94" value="0" /><Key frame="121" value="1.60444" /><Key frame="154" value="0" /><Key frame="180" value="-70.9277" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="32" value="0.602755" /><Key frame="59" value="0.602755" /><Key frame="94" value="0.602755" /><Key frame="121" value="0.602755" /><Key frame="154" value="0.602755" /><Key frame="180" value="0.589631" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="32" value="-23.1" /><Key frame="59" value="-37.4943" /><Key frame="94" value="-23.1" /><Key frame="121" value="-37.4943" /><Key frame="154" value="-23.1" /><Key frame="180" value="89.209" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="32" value="8.00403" /><Key frame="59" value="8.88428" /><Key frame="94" value="8.00403" /><Key frame="121" value="8.88428" /><Key frame="154" value="8.00403" /><Key frame="180" value="7.29493" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="32" value="0" /><Key frame="59" value="0" /><Key frame="94" value="0" /><Key frame="121" value="0" /><Key frame="154" value="0" /><Key frame="180" value="0.612832" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="32" value="30.6" /><Key frame="46" value="0.5" /><Key frame="72" value="50.6986" /><Key frame="94" value="30.6" /><Key frame="108" value="0.5" /><Key frame="134" value="50.6986" /><Key frame="154" value="30.6" /><Key frame="180" value="30.3223" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="32" value="70.8345" /><Key frame="59" value="71.103" /><Key frame="94" value="70.8345" /><Key frame="121" value="71.103" /><Key frame="154" value="70.8345" /><Key frame="180" value="70.752" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="45" value="0.602465" /><Key frame="72" value="0.98" /><Key frame="107" value="0.602465" /><Key frame="134" value="0.98" /><Key frame="180" value="0.599297" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="32" value="30.4" /><Key frame="59" value="-28.9992" /><Key frame="94" value="30.4" /><Key frame="121" value="-28.9992" /><Key frame="154" value="30.4" /><Key frame="180" value="89.0332" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="32" value="-0.5" /><Key frame="59" value="-2.19889" /><Key frame="94" value="-0.5" /><Key frame="121" value="-2.19889" /><Key frame="154" value="-0.5" /><Key frame="180" value="-7.73437" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="32" value="-73" /><Key frame="59" value="-72.8936" /><Key frame="94" value="-73" /><Key frame="121" value="-72.8936" /><Key frame="154" value="-73" /><Key frame="180" value="-1.145" /></ActuatorCurve></ActuatorList></Timeline><Resource name="Standing" type="Lock" timeout="1" /><Resource name="All motors" type="Lock" timeout="1" /></Box><Box name="Stand Up" id="5" localization="8" tooltip="the robot tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="158" y="32"><bitmap>media/images/box/movement/stand.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in standing up." id="4" /><Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" /><Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" /><Timeline enable="0"><BehaviorLayer name="StandUpBehavior"><BehaviorKeyframe name="DetectRobotPose" index="1"><Diagram><Box name="Goto Posture" id="2" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureProxy = ALProxy("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureProxy.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureProxy.setMaxTryNumber(self.nTries)

        result = self.postureProxy.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" /><Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" /><Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6"><Choice value="Crouch" /><Choice value="LyingBack" /><Choice value="LyingBelly" /><Choice value="Sit" /><Choice value="SitRelax" /><Choice value="StandInit" /><Choice value="Stand" /><Choice value="StandZero" /></Parameter><Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" /><Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" /><Resource name="All motors" type="Lock" timeout="0" /><Resource name="Stiffness" type="Lock" timeout="0" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="All motors" type="Lock" timeout="0" /></Box><Box name="Mouse" id="7" localization="8" tooltip="ID : #04A 0002&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Mouse" x="589" y="144"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="130"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram /></BehaviorKeyframe></BehaviorLayer><ActuatorList model="juliette"><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="20" value="-3.6" /><Key frame="24" value="-6.9" /><Key frame="27" value="-3.6" /><Key frame="29" value="-6.9" /><Key frame="31" value="-2.2" /><Key frame="34" value="-6.9" /><Key frame="37" value="-2.2" /><Key frame="47" value="-3.6" /><Key frame="49" value="-6.9" /><Key frame="51" value="-2.2" /><Key frame="53" value="-6.9" /><Key frame="55" value="-2.2" /><Key frame="61" value="-25.5" /><Key frame="69" value="-25.5" /><Key frame="74" value="-6.9" /><Key frame="77" value="-3.6" /><Key frame="79" value="-6.9" /><Key frame="81" value="-2.2" /><Key frame="84" value="-6.9" /><Key frame="87" value="-2.2" /><Key frame="96" value="-3.6" /><Key frame="98" value="-6.9" /><Key frame="100" value="-2.2" /><Key frame="103" value="-6.9" /><Key frame="106" value="-2.2" /><Key frame="130" value="-12.5684" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="20" value="0" /><Key frame="130" value="0.175782" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="20" value="-44.1065" /><Key frame="106" value="-44.1065" /><Key frame="130" value="-2.02149" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="20" value="0" /><Key frame="106" value="0" /><Key frame="130" value="0" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="20" value="24.9461" /><Key frame="106" value="24.9461" /><Key frame="130" value="0.0878909" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="20" value="-82.002" /><Key frame="106" value="-82.002" /><Key frame="130" value="-29.9707" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="20" value="-56.5137" /><Key frame="106" value="-56.5137" /><Key frame="130" value="-71.0156" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="20" value="0.13181" /><Key frame="24" value="0.3" /><Key frame="27" value="0.16" /><Key frame="29" value="0.29" /><Key frame="31" value="0.17" /><Key frame="34" value="0.29" /><Key frame="37" value="0.17" /><Key frame="47" value="0.16" /><Key frame="49" value="0.29" /><Key frame="51" value="0.17" /><Key frame="53" value="0.29" /><Key frame="55" value="0.17" /><Key frame="74" value="0.3" /><Key frame="77" value="0.16" /><Key frame="79" value="0.29" /><Key frame="81" value="0.17" /><Key frame="84" value="0.29" /><Key frame="87" value="0.17" /><Key frame="96" value="0.16" /><Key frame="98" value="0.29" /><Key frame="100" value="0.17" /><Key frame="103" value="0.29" /><Key frame="106" value="0.17" /><Key frame="130" value="0.593146" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="20" value="1.49414" /><Key frame="55" value="1.49414" /><Key frame="61" value="5.9" /><Key frame="69" value="5.9" /><Key frame="74" value="1.49414" /><Key frame="106" value="1.49414" /><Key frame="130" value="89.2969" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="20" value="3.60351" /><Key frame="106" value="3.60351" /><Key frame="130" value="7.73437" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="20" value="-52.1222" /><Key frame="106" value="-52.1222" /><Key frame="130" value="-0.793436" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="20" value="82.0898" /><Key frame="106" value="82.0898" /><Key frame="130" value="29.707" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="20" value="54.4922" /><Key frame="106" value="54.4922" /><Key frame="130" value="70.752" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="20" value="0.13181" /><Key frame="24" value="0.3" /><Key frame="27" value="0.16" /><Key frame="29" value="0.29" /><Key frame="31" value="0.17" /><Key frame="34" value="0.29" /><Key frame="37" value="0.17" /><Key frame="47" value="0.16" /><Key frame="49" value="0.29" /><Key frame="51" value="0.17" /><Key frame="53" value="0.29" /><Key frame="55" value="0.17" /><Key frame="74" value="0.3" /><Key frame="77" value="0.16" /><Key frame="79" value="0.29" /><Key frame="81" value="0.17" /><Key frame="84" value="0.29" /><Key frame="87" value="0.17" /><Key frame="96" value="0.16" /><Key frame="98" value="0.29" /><Key frame="100" value="0.17" /><Key frame="103" value="0.29" /><Key frame="106" value="0.17" /><Key frame="130" value="0.594903" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="20" value="1.05469" /><Key frame="55" value="1.05469" /><Key frame="61" value="12.6" /><Key frame="69" value="12.6" /><Key frame="74" value="1.05469" /><Key frame="106" value="1.05469" /><Key frame="130" value="88.418" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="20" value="-1.58204" /><Key frame="106" value="-1.58204" /><Key frame="130" value="-7.29493" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="20" value="51.9416" /><Key frame="106" value="51.9416" /><Key frame="130" value="0.788627" /></ActuatorCurve></ActuatorList></Timeline><Resource name="Standing" type="Lock" timeout="1" /><Resource name="All motors" type="Lock" timeout="1" /></Box><Box name="Gorilla" id="10" localization="8" tooltip="ID : #04A 0003&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Gorilla" x="596" y="258"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="116"><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="19" value="-6.0463" /><Key frame="31" value="-6.0463" /><Key frame="43" value="-6.0463" /><Key frame="55" value="-6.0463" /><Key frame="73" value="-6.0463" /><Key frame="89" value="-6.0463" /><Key frame="116" value="-11.6132" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="18" value="5" /><Key frame="30" value="-5" /><Key frame="42" value="5" /><Key frame="54" value="-5" /><Key frame="72" value="5" /><Key frame="89" value="-5" /><Key frame="116" value="0.0104437" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="21" value="7.89714" /><Key frame="33" value="7.89714" /><Key frame="45" value="7.89714" /><Key frame="57" value="7.89714" /><Key frame="75" value="7.89714" /><Key frame="91" value="7.89714" /><Key frame="116" value="-2.14349" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="21" value="5" /><Key frame="33" value="-5" /><Key frame="45" value="5" /><Key frame="57" value="-5" /><Key frame="75" value="5" /><Key frame="91" value="-5" /><Key frame="116" value="-0.346687" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="21" value="-0.979096" /><Key frame="33" value="-0.979096" /><Key frame="45" value="-0.979096" /><Key frame="57" value="-0.979096" /><Key frame="75" value="-0.979096" /><Key frame="91" value="-0.979096" /><Key frame="116" value="-0.477106" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="11" value="-31.5" /><Key frame="25" value="-87.7457" /><Key frame="39" value="-0.67216" /><Key frame="51" value="-87.7457" /><Key frame="63" value="-0.67216" /><Key frame="81" value="-87.7457" /><Key frame="97" value="-0.67216" /><Key frame="116" value="-29.8395" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="20" value="-9.62949" /><Key frame="32" value="-19" /><Key frame="44" value="-9.62949" /><Key frame="56" value="-19" /><Key frame="74" value="-9.62949" /><Key frame="90" value="-19" /><Key frame="116" value="-70.0031" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="20" value="0.0284548" /><Key frame="32" value="0.02" /><Key frame="44" value="0.0284548" /><Key frame="56" value="0.02" /><Key frame="74" value="0.0284548" /><Key frame="90" value="0.02" /><Key frame="116" value="0.6" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="20" value="-9.07694" /><Key frame="32" value="8.2" /><Key frame="44" value="-9.07694" /><Key frame="56" value="8.2" /><Key frame="74" value="-9.07694" /><Key frame="90" value="25.7" /><Key frame="116" value="89.2229" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="11" value="19.7" /><Key frame="20" value="10.8237" /><Key frame="32" value="23.4" /><Key frame="44" value="10.8237" /><Key frame="56" value="23.4" /><Key frame="74" value="10.8237" /><Key frame="90" value="23.4" /><Key frame="116" value="8.3288" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="20" value="-55.9097" /><Key frame="32" value="-76.3" /><Key frame="44" value="-55.9097" /><Key frame="56" value="-76.3" /><Key frame="74" value="-55.9097" /><Key frame="90" value="-76.3" /><Key frame="116" value="-0.379539" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="25" value="0.67216" /><Key frame="39" value="87.7457" /><Key frame="51" value="0.67216" /><Key frame="63" value="87.7457" /><Key frame="81" value="0.67216" /><Key frame="97" value="87.7457" /><Key frame="116" value="30.1137" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="20" value="19" /><Key frame="32" value="9.62949" /><Key frame="44" value="19" /><Key frame="56" value="9.62949" /><Key frame="74" value="19" /><Key frame="90" value="9.62949" /><Key frame="116" value="70.2474" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="20" value="0.02" /><Key frame="32" value="0.0284548" /><Key frame="44" value="0.02" /><Key frame="56" value="0.0284548" /><Key frame="74" value="0.02" /><Key frame="90" value="0.0284548" /><Key frame="116" value="0.6" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="20" value="8.2" /><Key frame="32" value="-9.07694" /><Key frame="44" value="8.2" /><Key frame="56" value="-9.07694" /><Key frame="74" value="8.2" /><Key frame="90" value="-9.07694" /><Key frame="116" value="88.8048" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="20" value="-23.4" /><Key frame="32" value="-10.8237" /><Key frame="44" value="-23.4" /><Key frame="56" value="-10.8237" /><Key frame="74" value="-23.4" /><Key frame="90" value="-10.8237" /><Key frame="116" value="-8.63641" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="20" value="76.3" /><Key frame="32" value="55.9097" /><Key frame="44" value="76.3" /><Key frame="56" value="55.9097" /><Key frame="74" value="76.3" /><Key frame="90" value="55.9097" /><Key frame="116" value="0.16519" /></ActuatorCurve></ActuatorList></Timeline><Resource name="Standing" type="Lock" timeout="1" /><Resource name="All motors" type="Lock" timeout="1" /></Box><Box name="Golf" id="8" localization="8" tooltip="ID : #04E 0001&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Golf" x="797" y="144"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="170"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe59" index="59"><Diagram><Box name="Play Sound" id="1" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be wav or ogg (on virtual robot) and also mp3 (on a real robot).&#x0A;&#x0A;Note: There can be some delay to play ogg or mp3 (on a robot) files. We advise you to use wav if&#x0A;you want a fast play of the file." x="157" y="57"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Parameter name="File name" inherits_from_parent="0" content_type="4" value="/golf.ogg" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" /><Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" /><Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" /><Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" /><Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" /><Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" /><Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" /><Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" /></Box><Box name="Get Attached File" id="1" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="216" y="71"><bitmap>media/images/box/folder.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        pass

    def onInput_onStart(self):
        self.onStopped(self.behaviorAbsolutePath() + self.getParameter("File name"))]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" /><Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Audio player" type="Lock" timeout="0" /></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" /></Diagram></BehaviorKeyframe></BehaviorLayer><ActuatorList model="juliette"><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="40" value="15.3" /><Key frame="125" value="10.2" /><Key frame="133" value="-5.5" /><Key frame="141" value="7.7" /><Key frame="145" value="3.3" /><Key frame="150" value="3.3" /><Key frame="170" value="-11.3187" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="40" value="0" /><Key frame="59" value="0.5" /><Key frame="81" value="41.4" /><Key frame="125" value="58.2" /><Key frame="145" value="58.2" /><Key frame="150" value="58.2" /><Key frame="170" value="-0.114815" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="40" value="-54.2812" /><Key frame="72" value="-54.2812" /><Key frame="125" value="-36.8431" /><Key frame="133" value="-24" /><Key frame="170" value="-2.80131" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="40" value="0" /><Key frame="54" value="-4.7" /><Key frame="64" value="6.8" /><Key frame="72" value="0" /><Key frame="125" value="0.504522" /><Key frame="170" value="0" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="40" value="20.5994" /><Key frame="72" value="20.5994" /><Key frame="125" value="10.3507" /><Key frame="170" value="-0.834514" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="40" value="-75.6164" /><Key frame="81" value="-75.6164" /><Key frame="125" value="-65.2" /><Key frame="141" value="-77.3906" /><Key frame="145" value="-77.3906" /><Key frame="150" value="-77.3906" /><Key frame="170" value="-30.0873" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="40" value="-33.5339" /><Key frame="81" value="-33.5339" /><Key frame="125" value="-89.2" /><Key frame="141" value="-88.6582" /><Key frame="145" value="-88.6582" /><Key frame="150" value="-88.6582" /><Key frame="170" value="-70.7003" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="40" value="0.02" /><Key frame="64" value="0.02" /><Key frame="81" value="0.02" /><Key frame="125" value="0.88" /><Key frame="133" value="0.98" /><Key frame="136" value="0.98" /><Key frame="141" value="0.0252863" /><Key frame="145" value="0.0252863" /><Key frame="150" value="0.0252863" /><Key frame="170" value="0.6" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="40" value="6.24301" /><Key frame="81" value="6.24301" /><Key frame="125" value="29.7" /><Key frame="133" value="-25.7" /><Key frame="136" value="-25.7" /><Key frame="141" value="-4.6" /><Key frame="145" value="-11.6536" /><Key frame="150" value="-11.6536" /><Key frame="170" value="89.1618" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="40" value="8.78698" /><Key frame="54" value="2.8" /><Key frame="64" value="11.2" /><Key frame="81" value="8.78698" /><Key frame="125" value="17.4" /><Key frame="141" value="17.0236" /><Key frame="145" value="17.0236" /><Key frame="150" value="17.0236" /><Key frame="170" value="8.44191" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="40" value="-38.526" /><Key frame="81" value="-38.526" /><Key frame="125" value="11.6" /><Key frame="141" value="11.1076" /><Key frame="145" value="11.1076" /><Key frame="150" value="11.1076" /><Key frame="170" value="0.509443" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="40" value="62.7" /><Key frame="64" value="62" /><Key frame="81" value="62.7" /><Key frame="97" value="57.922" /><Key frame="109" value="73.8" /><Key frame="125" value="50.2" /><Key frame="140" value="60.7" /><Key frame="150" value="46.4552" /><Key frame="170" value="30.2762" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="40" value="17.6754" /><Key frame="64" value="7.6" /><Key frame="81" value="17.6754" /><Key frame="97" value="52.3577" /><Key frame="125" value="100.5" /><Key frame="150" value="100.45" /><Key frame="170" value="70.8285" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="40" value="0.18" /><Key frame="64" value="0.18" /><Key frame="81" value="0.18" /><Key frame="97" value="0.194447" /><Key frame="109" value="0.02" /><Key frame="125" value="0.21" /><Key frame="150" value="0.204738" /><Key frame="170" value="0.592703" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="40" value="14.1761" /><Key frame="64" value="3.7" /><Key frame="81" value="14.1761" /><Key frame="97" value="27.3323" /><Key frame="125" value="28.9" /><Key frame="150" value="43.6908" /><Key frame="170" value="88.831" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="40" value="-4.62411" /><Key frame="54" value="-17.4" /><Key frame="64" value="-0.5" /><Key frame="81" value="-4.62411" /><Key frame="97" value="-6.38797" /><Key frame="125" value="-7.96282" /><Key frame="150" value="-7.57657" /><Key frame="170" value="-8.16814" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="40" value="42.5196" /><Key frame="64" value="34.8" /><Key frame="81" value="42.5196" /><Key frame="97" value="29.1313" /><Key frame="125" value="-3.3" /><Key frame="150" value="-2.85009" /><Key frame="170" value="-0.35469" /></ActuatorCurve></ActuatorList></Timeline><Resource name="Standing" type="Lock" timeout="1" /><Resource name="All motors" type="Lock" timeout="1" /><Resource name="Speakers" type="Lock" timeout="1" /></Box><Box name="Football" id="19" localization="8" tooltip="ID : #04E 0002&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Football" x="792" y="30"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="299"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Move Along" id="3" localization="8" tooltip="Move along a trajectory given by an attached .pmt file.&#x0A;&#x0A;V1.0.0&#x0A;" x="125" y="75"><bitmap>media/images/box/movement/walk_forward.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy("ALMotion")
        self.navigation = ALProxy("ALNavigation")

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.move(0., 0., 0.)

    def onInput_onStart(self):
        relativePath = self.getParameter("Planar Move Trajectory")
        if len(relativePath) == 0:
            self.failure()
            return

        behaviorPath = self.behaviorAbsolutePath()
        trajectoryPath = behaviorPath + relativePath

        trajectoryData = str()
        with open(trajectoryPath, 'r') as trajectoryFile:
            trajectoryData = trajectoryFile.read()
        trajectory = eval(trajectoryData)

        if trajectory[0] != "Composed": # dealing with trajectories with radius
            trajectory = trajectory[0]

        result = self.navigation.moveAlong(trajectory)
        if (result):
            self.success()
        else:
            self.failure()

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the trajectory was correctly executed." id="4" /><Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the trajectory was stopped to avoid collisions." id="5" /><Parameter name="Planar Move Trajectory" inherits_from_parent="0" content_type="4" value="/move.pmt" default_value="" tooltip="" id="6" /></Box><Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="1" /></Diagram></BehaviorKeyframe></BehaviorLayer><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="17" value="11.5" /><Key frame="37" value="17.7" /><Key frame="54" value="-17.4902" /><Key frame="65" value="-17.4902" /><Key frame="71" value="-17.4902" /><Key frame="77" value="-17.4902" /><Key frame="83" value="-9.2" /><Key frame="88" value="-9.2" /><Key frame="94" value="-17.4902" /><Key frame="115" value="-19.5117" /><Key frame="134" value="-25.6" /><Key frame="142" value="-37" /><Key frame="192" value="-30.7" /><Key frame="208" value="3.60351" /><Key frame="223" value="-26.8066" /><Key frame="244" value="-26.8066" /><Key frame="261" value="-4.9" /><Key frame="279" value="-11.25" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="17" value="-38.8" /><Key frame="54" value="-47.8125" /><Key frame="65" value="-47.8125" /><Key frame="71" value="-26.9" /><Key frame="77" value="-26.9" /><Key frame="83" value="-73.2" /><Key frame="88" value="-73.2" /><Key frame="94" value="-47.8125" /><Key frame="115" value="-22.6758" /><Key frame="142" value="0" /><Key frame="192" value="0" /><Key frame="208" value="0" /><Key frame="223" value="0" /><Key frame="244" value="0" /><Key frame="279" value="0" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="23" value="-84.7252" /><Key frame="41" value="-77.0786" /><Key frame="63" value="-67.5879" /><Key frame="93" value="-67.5879" /><Key frame="115" value="-73.3887" /><Key frame="134" value="-12.6" /><Key frame="142" value="-15.293" /><Key frame="192" value="-18.2812" /><Key frame="208" value="-75.5859" /><Key frame="223" value="-11.25" /><Key frame="244" value="-11.25" /><Key frame="261" value="-71.7188" /><Key frame="274" value="-29.8828" /><Key frame="283" value="-20.5664" /><Key frame="292" value="-27.2434"><Tangent side="left" interpType="bezier" abscissaParam="-3.50031" ordinateParam="0.127691" /><Tangent side="right" interpType="bezier" abscissaParam="0" ordinateParam="0" /></Key></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="23" value="-19.5144" /><Key frame="41" value="-95.1891" /><Key frame="63" value="-97.9101" /><Key frame="93" value="-97.9101" /><Key frame="115" value="-91.4941" /><Key frame="134" value="-45.6" /><Key frame="142" value="-49.3945" /><Key frame="192" value="-53.6133" /><Key frame="208" value="23.5547" /><Key frame="223" value="-29.3555" /><Key frame="244" value="-29.3555" /><Key frame="261" value="-63.9844" /><Key frame="274" value="-69.9609" /><Key frame="283" value="-69.873" /><Key frame="292" value="-69.9609" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="23" value="0.61" /><Key frame="41" value="0.4304" /><Key frame="63" value="0.433216" /><Key frame="93" value="0.433216" /><Key frame="115" value="0.241652" /><Key frame="134" value="1" /><Key frame="142" value="0.906854" /><Key frame="192" value="0.8471" /><Key frame="208" value="0.0360281" /><Key frame="223" value="0.956942" /><Key frame="244" value="0.956942" /><Key frame="261" value="0.587873" /><Key frame="274" value="0.588752" /><Key frame="283" value="0.67" /><Key frame="292" value="0.47" /><Key frame="294" value="0.588752" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="23" value="9.92936" /><Key frame="41" value="8.34731" /><Key frame="63" value="-8.52539" /><Key frame="93" value="-8.52539" /><Key frame="115" value="-61.084" /><Key frame="134" value="-8.9" /><Key frame="142" value="15.3809" /><Key frame="192" value="31.5527" /><Key frame="208" value="-2.81249" /><Key frame="223" value="-77.7832" /><Key frame="244" value="-77.7832" /><Key frame="261" value="9.4043" /><Key frame="274" value="89.8242" /><Key frame="283" value="97.1192"><Tangent side="right" interpType="bezier" abscissaParam="2.73871" ordinateParam="1.01801" /></Key><Key frame="292" value="89.9121"><Tangent side="left" interpType="bezier" abscissaParam="-4.82016" ordinateParam="-6.08243e-09" /></Key></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="23" value="23.0252" /><Key frame="41" value="38.0547" /><Key frame="63" value="63.7207" /><Key frame="93" value="63.7207" /><Key frame="115" value="29.1797" /><Key frame="134" value="0.5" /><Key frame="142" value="0.9668" /><Key frame="192" value="1.14258" /><Key frame="208" value="19.8633" /><Key frame="223" value="18.1055" /><Key frame="244" value="18.1055" /><Key frame="261" value="10.5469" /><Key frame="274" value="7.03126" /><Key frame="283" value="7.73437" /><Key frame="292" value="7.38281" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="23" value="-76.3803" /><Key frame="41" value="-104.5" /><Key frame="63" value="-104.5" /><Key frame="93" value="-104.5" /><Key frame="115" value="-19.6023" /><Key frame="134" value="1.9" /><Key frame="142" value="2.0191" /><Key frame="192" value="0.261268" /><Key frame="208" value="-13.0104" /><Key frame="223" value="-48.9581" /><Key frame="244" value="-48.9581" /><Key frame="261" value="-56.7805" /><Key frame="274" value="0.43705" /><Key frame="277" value="0.529749"><Tangent side="right" interpType="bezier" abscissaParam="4.13333" ordinateParam="0" /></Key><Key frame="284" value="15.8181"><Tangent side="right" interpType="bezier" abscissaParam="6.86905" ordinateParam="-0.351024" /></Key><Key frame="294" value="0.349159" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="21" value="88.5" /><Key frame="44" value="75.853" /><Key frame="68" value="42.627" /><Key frame="96" value="42.627" /><Key frame="115" value="9.31641" /><Key frame="142" value="19.0723" /><Key frame="192" value="20.918" /><Key frame="208" value="78.6621" /><Key frame="223" value="14.6777" /><Key frame="244" value="14.6777" /><Key frame="261" value="70.6641" /><Key frame="276" value="29.8828" /><Key frame="286" value="20.5664" /><Key frame="297" value="27.2434"><Tangent side="left" interpType="bezier" abscissaParam="-4.27815" ordinateParam="-0.156067" /><Tangent side="right" interpType="bezier" abscissaParam="0" ordinateParam="0" /></Key></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="21" value="-3.07861" /><Key frame="44" value="42.4493" /><Key frame="68" value="43.7695" /><Key frame="96" value="43.7695" /><Key frame="115" value="47.4609" /><Key frame="142" value="60.6445" /><Key frame="192" value="62.4902" /><Key frame="208" value="-25.9277" /><Key frame="223" value="20.5664" /><Key frame="244" value="20.5664" /><Key frame="261" value="72.5977" /><Key frame="276" value="69.9609" /><Key frame="286" value="69.873" /><Key frame="297" value="69.9609" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="21" value="0.9544" /><Key frame="44" value="0.9544" /><Key frame="68" value="0.942004" /><Key frame="96" value="0.942004" /><Key frame="115" value="0.544815" /><Key frame="142" value="0.549209" /><Key frame="192" value="0.552724" /><Key frame="208" value="0.0369068" /><Key frame="223" value="0.942882" /><Key frame="244" value="0.942882" /><Key frame="261" value="0.630931" /><Key frame="276" value="0.588752" /><Key frame="286" value="0.67" /><Key frame="297" value="0.47" /><Key frame="299" value="0.588752" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="21" value="-19.4217" /><Key frame="44" value="7.64898" /><Key frame="68" value="-2.10938" /><Key frame="96" value="-2.10938" /><Key frame="115" value="-29.0039" /><Key frame="134" value="119.5" /><Key frame="142" value="114.961" /><Key frame="192" value="110.479" /><Key frame="208" value="-15.9961" /><Key frame="223" value="-74.4434" /><Key frame="244" value="-74.4434" /><Key frame="261" value="24.6094" /><Key frame="276" value="89.8242" /><Key frame="286" value="97.1192"><Tangent side="right" interpType="bezier" abscissaParam="3.34733" ordinateParam="-1.24424" /></Key><Key frame="297" value="89.9121"><Tangent side="left" interpType="bezier" abscissaParam="-5.8913" ordinateParam="7.43408e-09" /></Key></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="21" value="-34.1044" /><Key frame="44" value="-54.5832" /><Key frame="68" value="-55.6348" /><Key frame="96" value="-55.6348" /><Key frame="115" value="-26.1035" /><Key frame="134" value="-41" /><Key frame="142" value="-36.0352" /><Key frame="192" value="-30.6738" /><Key frame="208" value="-21.2695" /><Key frame="223" value="-15.9082" /><Key frame="244" value="-15.9082" /><Key frame="261" value="-13.2715" /><Key frame="276" value="-7.03126" /><Key frame="286" value="-7.73437" /><Key frame="297" value="-7.38281" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="21" value="39.461" /><Key frame="44" value="-11.3404" /><Key frame="68" value="-15.2077" /><Key frame="96" value="-15.2077" /><Key frame="115" value="-47.8155" /><Key frame="134" value="20.9" /><Key frame="142" value="17.7517" /><Key frame="192" value="15.4665" /><Key frame="208" value="-37.6201" /><Key frame="223" value="99.8426" /><Key frame="244" value="99.8426" /><Key frame="261" value="75.4966" /><Key frame="276" value="-0.43705" /><Key frame="280" value="-0.529749"><Tangent side="right" interpType="bezier" abscissaParam="4.72381" ordinateParam="0" /></Key><Key frame="288" value="-15.8181"><Tangent side="right" interpType="bezier" abscissaParam="7.55597" ordinateParam="0.386126" /></Key><Key frame="299" value="-0.349159" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="20" value="-40.1" /><Key frame="63" value="-13.2134" /><Key frame="92" value="-12.6377" /><Key frame="115" value="-1.18777" /><Key frame="134" value="-23.6519" /><Key frame="142" value="-16.4579" /><Key frame="192" value="-19.0853" /><Key frame="208" value="-25.9564" /><Key frame="223" value="4.2129" /><Key frame="244" value="4.2129" /><Key frame="261" value="-16.9714" /><Key frame="279" value="-1.89703" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="20" value="18.3" /><Key frame="63" value="9.14193" /><Key frame="92" value="9.14193" /><Key frame="115" value="-1.37336" /><Key frame="134" value="6.24564" /><Key frame="142" value="2.47333" /><Key frame="192" value="3.20153" /><Key frame="208" value="10.7669" /><Key frame="223" value="-6.94338" /><Key frame="244" value="-6.94338" /><Key frame="261" value="5.54698" /><Key frame="279" value="-0.464532" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="63" value="0" /><Key frame="92" value="0" /><Key frame="115" value="0" /><Key frame="134" value="0" /><Key frame="142" value="0" /><Key frame="192" value="0" /><Key frame="208" value="0" /><Key frame="223" value="0" /><Key frame="244" value="0" /><Key frame="261" value="0" /><Key frame="279" value="0" /></ActuatorCurve></ActuatorList></Timeline><Resource name="Standing" type="Lock" timeout="1" /><Resource name="All motors" type="Lock" timeout="1" /></Box><Box name="TakePicture" id="12" localization="8" tooltip="ID : #04C 0003&#x0A;&#x0A;===================&#x0A;&#x0A;Tags :&#x0A;- Picture" x="1227" y="10"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="90"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe14" index="14"><Diagram><Box name="Blink" id="2" localization="8" tooltip="tags:&#x0A;LED" x="108" y="35"><bitmap>media/images/box/interaction/LED.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );

        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );

        self.onStopped()


    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Box name="EyesOnOff" id="6" localization="8" tooltip="tags:&#x0A;LED" x="248" y="36"><bitmap>media/images/box/interaction/LED.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = self.getParameter('Timing')

        self.log(self.getParameter('Eyes'))

        if(self.getParameter('Eyes') == 'On'):
            nColor = 0xFFFFFF
        else:
            nColor = 0x000000

        ALLeds.fadeRGB( "FaceLeds", nColor, rDuration );

        self.onStopped()

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Parameter name="Eyes" inherits_from_parent="0" content_type="3" value="Off" default_value="On" custom_choice="0" tooltip="" id="5"><Choice value="On" /><Choice value="Off" /></Parameter><Parameter name="Timing" inherits_from_parent="0" content_type="2" value="0.5" default_value="0.5" min="0.05" max="10.05" tooltip="" id="6" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" /><Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="4" /></Diagram></BehaviorKeyframe><BehaviorKeyframe name="keyframe43" index="43"><Diagram><Box name="Flash" id="4" localization="8" tooltip="tags:&#x0A;LED" x="84" y="32"><bitmap>media/images/box/interaction/LED.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.1;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );

        time.sleep( 0.05 );

        rDuration = 1;
        ALLeds.fadeRGB( "FaceLeds", 0x000000, rDuration );

        self.onStopped()


    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Box name="Blink" id="6" localization="8" tooltip="tags:&#x0A;LED" x="247" y="28"><bitmap>media/images/box/interaction/LED.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );

        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );

        self.onStopped()


    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Link inputowner="6" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="1" /></Diagram></BehaviorKeyframe></BehaviorLayer><BehaviorLayer name="behavior_layer2"><BehaviorKeyframe name="keyframe42" index="42"><Diagram><Box name="Play Sound" id="3" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be&#x0A;wav, mp3, or ogg.&#x0A;&#x0A;Note: There can be some delay to play mp3 files. We advise you to use wav if&#x0A;you want a fast play of the file." x="91" y="19"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Parameter name="File name" inherits_from_parent="0" content_type="4" value="/camera1.ogg" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" /><Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" /><Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" /><Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" /><Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" /><Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" /><Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" /><Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" /><Resource name="Audio player" type="Stop on demand" timeout="0" /></Box><Box name="Get Attached File" id="1" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="216" y="71"><bitmap>media/images/box/folder.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        pass

    def onInput_onStart(self):
        self.onStopped(self.behaviorAbsolutePath() + self.getParameter("File name"))]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" /><Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="1" /></Diagram></BehaviorKeyframe></BehaviorLayer><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="17" value="6.8" /><Key frame="32" value="-3.2544" /><Key frame="37" value="-7.8" /><Key frame="49" value="-5.62747" /><Key frame="58" value="-3.89167" /><Key frame="74" value="5.1" /><Key frame="90" value="-10.0221" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="32" value="-2.46337" /><Key frame="37" value="-2.81494" /><Key frame="49" value="-2.99072" /><Key frame="58" value="-2.70816" /><Key frame="90" value="-1.145" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="16" value="-15.5456" /><Key frame="31" value="-2.06906" /><Key frame="58" value="-2.06906" /><Key frame="73" value="-19.2661" /><Key frame="88" value="-2.1955" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="31" value="0" /><Key frame="58" value="0" /><Key frame="88" value="0" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="16" value="7.94935" /><Key frame="31" value="0.138683" /><Key frame="58" value="0.138683" /><Key frame="73" value="8.96106" /><Key frame="88" value="-0.259007" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="15" value="-69" /><Key frame="31" value="-88.5" /><Key frame="43" value="-88.5" /><Key frame="58" value="-87.8062" /><Key frame="73" value="-82.2" /><Key frame="88" value="-25.4862" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="15" value="-41.3" /><Key frame="31" value="-46.5607" /><Key frame="43" value="-46.5607" /><Key frame="46" value="-40.9561" /><Key frame="58" value="-47.0001" /><Key frame="88" value="-66.888" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="15" value="0.57" /><Key frame="31" value="1" /><Key frame="43" value="1" /><Key frame="46" value="0.12" /><Key frame="49" value="1" /><Key frame="58" value="0.9004" /><Key frame="88" value="0.3024" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="31" value="-29.3448" /><Key frame="43" value="-29.3448" /><Key frame="58" value="-25.126" /><Key frame="88" value="86.3073" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="15" value="32.8" /><Key frame="31" value="27.442" /><Key frame="43" value="27.442" /><Key frame="58" value="26.2115" /><Key frame="88" value="6.67737" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="15" value="22.5" /><Key frame="31" value="13.6359" /><Key frame="43" value="13.6359" /><Key frame="58" value="14.5148" /><Key frame="88" value="7.46839" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="15" value="69" /><Key frame="31" value="88.5" /><Key frame="43" value="88.5" /><Key frame="58" value="87.8062" /><Key frame="73" value="82.2" /><Key frame="88" value="23.9968" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="15" value="41.3" /><Key frame="31" value="46.5607" /><Key frame="43" value="46.5607" /><Key frame="46" value="40.9561" /><Key frame="58" value="47.0001" /><Key frame="88" value="66.0922" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="15" value="0.57" /><Key frame="31" value="1" /><Key frame="43" value="1" /><Key frame="46" value="0.12" /><Key frame="49" value="1" /><Key frame="58" value="0.9004" /><Key frame="88" value="0.3052" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="31" value="-29.3448" /><Key frame="43" value="-29.3448" /><Key frame="58" value="-25.126" /><Key frame="88" value="86.2242" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="15" value="-32.8" /><Key frame="31" value="-27.442" /><Key frame="43" value="-27.442" /><Key frame="58" value="-26.2115" /><Key frame="88" value="-7.29742" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="15" value="-22.5" /><Key frame="31" value="-13.6359" /><Key frame="43" value="-13.6359" /><Key frame="58" value="-14.5148" /><Key frame="88" value="10.193" /></ActuatorCurve></ActuatorList></Timeline><Resource name="Standing" type="Lock" timeout="1" /><Resource name="All motors" type="Lock" timeout="1" /><Resource name="Left eye leds" type="Lock" timeout="1" /><Resource name="Right eye leds" type="Lock" timeout="1" /><Resource name="Speakers" type="Lock" timeout="1" /></Box><Box name="Saxophone" id="13" localization="8" tooltip="ID : #04D 0001&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Saxophone" x="781" y="265"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="262"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe40" index="40"><Diagram><Box name="Play Sound" id="1" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be wav or ogg (on virtual robot) and also mp3 (on a real robot).&#x0A;&#x0A;Note: There can be some delay to play ogg or mp3 (on a robot) files. We advise you to use wav if&#x0A;you want a fast play of the file." x="156" y="75"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Parameter name="File name" inherits_from_parent="0" content_type="4" value="/epicsax.ogg" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" /><Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" /><Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" /><Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" /><Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" /><Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" /><Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" /><Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" /></Box><Box name="Get Attached File" id="1" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="216" y="71"><bitmap>media/images/box/folder.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        pass

    def onInput_onStart(self):
        self.onStopped(self.behaviorAbsolutePath() + self.getParameter("File name"))]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" /><Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Audio player" type="Lock" timeout="0" /></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" /></Diagram></BehaviorKeyframe></BehaviorLayer><BehaviorLayer name="behavior_layer2"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Move To" id="1" localization="8" tooltip="Make the robot move to a configured point relative to its current location." x="161" y="82"><bitmap>media/images/box/movement/walk_forward.png</bitmap><script language="4"><content><![CDATA[
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.motion = ALProxy("ALMotion")
        self.positionErrorThresholdPos = 0.01
        self.positionErrorThresholdAng = 0.03

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.moveToward(0.0, 0.0, 0.0)

    def onInput_onStart(self):
        import almath
        # The command position estimation will be set to the sensor position
        # when the robot starts moving, so we use sensors first and commands later.
        initPosition = almath.Pose2D(self.motion.getRobotPosition(True))
        targetDistance = almath.Pose2D(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)
        expectedEndPosition = initPosition * targetDistance
        enableArms = self.getParameter("Arms movement enabled")
        self.motion.setMoveArmsEnabled(enableArms, enableArms)
        self.motion.moveTo(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)

        # The move is finished so output
        realEndPosition = almath.Pose2D(self.motion.getRobotPosition(False))
        positionError = realEndPosition.diff(expectedEndPosition)
        positionError.theta = almath.modulo2PI(positionError.theta)
        if (abs(positionError.x) < self.positionErrorThresholdPos
            and abs(positionError.y) < self.positionErrorThresholdPos
            and abs(positionError.theta) < self.positionErrorThresholdAng):
            self.onArrivedAtDestination()
        else:
            self.onStoppedBeforeArriving(positionError.toVector())

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onArrivedAtDestination" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot arrives at its destination." id="4" /><Output name="onStoppedBeforeArriving" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot stops before arriving to its destination. Returns a vector [x (m), y (m), theta(rad)] with the remaining distance up to the destination. This distance is expressed in the ROBOT frame." id="5" /><Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0.2" min="-5" max="10" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="6" /><Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-5" max="5" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="7" /><Parameter name="Theta (deg)" inherits_from_parent="0" content_type="2" value="-30" default_value="0" min="-180" max="180" tooltip="The orientation in degrees for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="8" /><Parameter name="Arms movement enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Enables natural motion of the arms." id="9" /><Resource name="Legs" type="Lock" timeout="0" /></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" /></Diagram></BehaviorKeyframe><BehaviorKeyframe name="keyframe1_copy" index="261"><Diagram><Box name="Move To" id="1" localization="8" tooltip="Make the robot move to a configured point relative to its current location." x="161" y="82"><bitmap>media/images/box/movement/walk_forward.png</bitmap><script language="4"><content><![CDATA[
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.motion = ALProxy("ALMotion")
        self.positionErrorThresholdPos = 0.01
        self.positionErrorThresholdAng = 0.03

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.moveToward(0.0, 0.0, 0.0)

    def onInput_onStart(self):
        import almath
        # The command position estimation will be set to the sensor position
        # when the robot starts moving, so we use sensors first and commands later.
        initPosition = almath.Pose2D(self.motion.getRobotPosition(True))
        targetDistance = almath.Pose2D(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)
        expectedEndPosition = initPosition * targetDistance
        enableArms = self.getParameter("Arms movement enabled")
        self.motion.setMoveArmsEnabled(enableArms, enableArms)
        self.motion.moveTo(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)

        # The move is finished so output
        realEndPosition = almath.Pose2D(self.motion.getRobotPosition(False))
        positionError = realEndPosition.diff(expectedEndPosition)
        positionError.theta = almath.modulo2PI(positionError.theta)
        if (abs(positionError.x) < self.positionErrorThresholdPos
            and abs(positionError.y) < self.positionErrorThresholdPos
            and abs(positionError.theta) < self.positionErrorThresholdAng):
            self.onArrivedAtDestination()
        else:
            self.onStoppedBeforeArriving(positionError.toVector())

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onArrivedAtDestination" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot arrives at its destination." id="4" /><Output name="onStoppedBeforeArriving" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot stops before arriving to its destination. Returns a vector [x (m), y (m), theta(rad)] with the remaining distance up to the destination. This distance is expressed in the ROBOT frame." id="5" /><Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0.2" min="-5" max="10" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="6" /><Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-5" max="5" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="7" /><Parameter name="Theta (deg)" inherits_from_parent="0" content_type="2" value="-30" default_value="0" min="-180" max="180" tooltip="The orientation in degrees for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="8" /><Parameter name="Arms movement enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Enables natural motion of the arms." id="9" /><Resource name="Legs" type="Lock" timeout="0" /></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" /></Diagram></BehaviorKeyframe></BehaviorLayer><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="38" value="-17.3872" /><Key frame="44" value="-1.73009" /><Key frame="50" value="-17.3872" /><Key frame="56" value="-1.73009" /><Key frame="62" value="-17.3872" /><Key frame="68" value="-1.73009" /><Key frame="74" value="-17.3872" /><Key frame="80" value="-1.73009" /><Key frame="86" value="-17.3872" /><Key frame="92" value="-1.73009" /><Key frame="98" value="-17.3872" /><Key frame="104" value="-1.73009" /><Key frame="110" value="-17.3872" /><Key frame="116" value="-1.73009" /><Key frame="122" value="-17.3872" /><Key frame="128" value="-1.73009" /><Key frame="134" value="-17.3872" /><Key frame="140" value="-1.73009" /><Key frame="146" value="-17.3872" /><Key frame="152" value="-1.73009" /><Key frame="158" value="-17.3872" /><Key frame="164" value="-1.73009" /><Key frame="170" value="-17.3872" /><Key frame="176" value="-1.73009" /><Key frame="182" value="-17.3872" /><Key frame="188" value="-1.73009" /><Key frame="194" value="-17.3872" /><Key frame="200" value="-1.73009" /><Key frame="206" value="-17.3872" /><Key frame="212" value="-1.73009" /><Key frame="218" value="-17.3872" /><Key frame="225" value="-1.73009" /><Key frame="262" value="-11.542" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="38" value="-10.7012" /><Key frame="44" value="-10.7012" /><Key frame="50" value="-10.7012" /><Key frame="56" value="-10.7012" /><Key frame="62" value="-10.7012" /><Key frame="68" value="-10.7012" /><Key frame="74" value="-10.7012" /><Key frame="80" value="-10.7012" /><Key frame="86" value="-10.7012" /><Key frame="92" value="-10.7012" /><Key frame="98" value="-10.7012" /><Key frame="104" value="-10.7012" /><Key frame="110" value="-10.7012" /><Key frame="116" value="-10.7012" /><Key frame="122" value="-10.7012" /><Key frame="128" value="-10.7012" /><Key frame="134" value="-10.7012" /><Key frame="140" value="-10.7012" /><Key frame="146" value="-10.7012" /><Key frame="152" value="-10.7012" /><Key frame="158" value="-10.7012" /><Key frame="164" value="-10.7012" /><Key frame="170" value="-10.7012" /><Key frame="176" value="-10.7012" /><Key frame="182" value="-10.7012" /><Key frame="188" value="-10.7012" /><Key frame="194" value="-10.7012" /><Key frame="200" value="-10.7012" /><Key frame="206" value="-10.7012" /><Key frame="212" value="-10.7012" /><Key frame="218" value="-10.7012" /><Key frame="225" value="-10.7012" /><Key frame="262" value="-0.157148" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="38" value="4.07983" /><Key frame="44" value="15.0558" /><Key frame="50" value="4.07983" /><Key frame="56" value="15.0558" /><Key frame="62" value="4.07983" /><Key frame="68" value="15.0558" /><Key frame="74" value="4.07983" /><Key frame="80" value="15.0558" /><Key frame="86" value="4.07983" /><Key frame="92" value="15.0558" /><Key frame="98" value="4.07983" /><Key frame="104" value="15.0558" /><Key frame="110" value="4.07983" /><Key frame="116" value="15.0558" /><Key frame="122" value="4.07983" /><Key frame="128" value="15.0558" /><Key frame="134" value="4.07983" /><Key frame="140" value="15.0558" /><Key frame="146" value="4.07983" /><Key frame="152" value="15.0558" /><Key frame="158" value="4.07983" /><Key frame="164" value="15.0558" /><Key frame="170" value="4.07983" /><Key frame="176" value="15.0558" /><Key frame="182" value="4.07983" /><Key frame="188" value="15.0558" /><Key frame="194" value="4.07983" /><Key frame="200" value="15.0558" /><Key frame="206" value="4.07983" /><Key frame="212" value="15.0558" /><Key frame="218" value="4.07983" /><Key frame="225" value="15.0558" /><Key frame="262" value="-2.16713" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="38" value="4.92482" /><Key frame="44" value="4.92482" /><Key frame="50" value="4.92482" /><Key frame="56" value="4.92482" /><Key frame="62" value="4.92482" /><Key frame="68" value="4.92482" /><Key frame="74" value="4.92482" /><Key frame="80" value="4.92482" /><Key frame="92" value="-5" /><Key frame="134" value="-4.22856" /><Key frame="146" value="4.92482" /><Key frame="158" value="4.92482" /><Key frame="164" value="4.92482" /><Key frame="170" value="4.92482" /><Key frame="176" value="4.92482" /><Key frame="182" value="4.92482" /><Key frame="188" value="4.92482" /><Key frame="194" value="4.92482" /><Key frame="200" value="4.92482" /><Key frame="206" value="4.92482" /><Key frame="212" value="4.92482" /><Key frame="218" value="4.92482" /><Key frame="225" value="4.92482" /><Key frame="262" value="0.350545" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="38" value="-2.06455" /><Key frame="44" value="-3.72545" /><Key frame="50" value="-2.06455" /><Key frame="56" value="-3.72545" /><Key frame="62" value="-2.06455" /><Key frame="68" value="-3.72545" /><Key frame="74" value="-2.06455" /><Key frame="80" value="-3.72545" /><Key frame="86" value="-2.06455" /><Key frame="92" value="-3.72545" /><Key frame="98" value="-2.06455" /><Key frame="104" value="-3.72545" /><Key frame="110" value="-2.06455" /><Key frame="116" value="-3.72545" /><Key frame="122" value="-2.06455" /><Key frame="128" value="-3.72545" /><Key frame="134" value="-2.06455" /><Key frame="140" value="-3.72545" /><Key frame="146" value="-2.06455" /><Key frame="152" value="-3.72545" /><Key frame="158" value="-2.06455" /><Key frame="164" value="-3.72545" /><Key frame="170" value="-2.06455" /><Key frame="176" value="-3.72545" /><Key frame="182" value="-2.06455" /><Key frame="188" value="-3.72545" /><Key frame="194" value="-2.06455" /><Key frame="200" value="-3.72545" /><Key frame="206" value="-2.06455" /><Key frame="212" value="-3.72545" /><Key frame="218" value="-2.06455" /><Key frame="225" value="-3.72545" /><Key frame="262" value="-0.550187" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="38" value="-69.0474" /><Key frame="44" value="-69.0474" /><Key frame="50" value="-69.0474" /><Key frame="56" value="-69.0474" /><Key frame="62" value="-69.0474" /><Key frame="68" value="-69.0474" /><Key frame="74" value="-69.0474" /><Key frame="80" value="-69.0474" /><Key frame="86" value="-69.0474" /><Key frame="92" value="-69.0474" /><Key frame="98" value="-69.0474" /><Key frame="104" value="-69.0474" /><Key frame="110" value="-69.0474" /><Key frame="116" value="-69.0474" /><Key frame="122" value="-69.0474" /><Key frame="128" value="-69.0474" /><Key frame="134" value="-69.0474" /><Key frame="140" value="-69.0474" /><Key frame="146" value="-69.0474" /><Key frame="152" value="-69.0474" /><Key frame="158" value="-69.0474" /><Key frame="164" value="-69.0474" /><Key frame="170" value="-69.0474" /><Key frame="176" value="-69.0474" /><Key frame="182" value="-69.0474" /><Key frame="188" value="-69.0474" /><Key frame="194" value="-69.0474" /><Key frame="200" value="-69.0474" /><Key frame="206" value="-69.0474" /><Key frame="212" value="-69.0474" /><Key frame="218" value="-69.0474" /><Key frame="225" value="-69.0474" /><Key frame="262" value="-30.5073" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="38" value="-26.7222" /><Key frame="44" value="-15.2352" /><Key frame="50" value="-26.7222" /><Key frame="56" value="-15.2352" /><Key frame="62" value="-26.7222" /><Key frame="68" value="-15.2352" /><Key frame="74" value="-26.7222" /><Key frame="80" value="-15.2352" /><Key frame="86" value="-26.7222" /><Key frame="92" value="-15.2352" /><Key frame="98" value="-26.7222" /><Key frame="104" value="-15.2352" /><Key frame="110" value="-26.7222" /><Key frame="116" value="-15.2352" /><Key frame="122" value="-26.7222" /><Key frame="128" value="-15.2352" /><Key frame="134" value="-26.7222" /><Key frame="140" value="-15.2352" /><Key frame="146" value="-26.7222" /><Key frame="152" value="-15.2352" /><Key frame="158" value="-26.7222" /><Key frame="164" value="-15.2352" /><Key frame="170" value="-26.7222" /><Key frame="176" value="-15.2352" /><Key frame="182" value="-26.7222" /><Key frame="188" value="-15.2352" /><Key frame="194" value="-26.7222" /><Key frame="200" value="-15.2352" /><Key frame="206" value="-26.7222" /><Key frame="212" value="-15.2352" /><Key frame="218" value="-26.7222" /><Key frame="225" value="-15.2352" /><Key frame="262" value="-70.3438" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="38" value="0.41" /><Key frame="44" value="0.2" /><Key frame="50" value="0.41" /><Key frame="56" value="0.2" /><Key frame="62" value="0.41" /><Key frame="68" value="0.2" /><Key frame="74" value="0.41" /><Key frame="80" value="0.2" /><Key frame="86" value="0.41" /><Key frame="92" value="0.2" /><Key frame="98" value="0.41" /><Key frame="104" value="0.2" /><Key frame="110" value="0.41" /><Key frame="116" value="0.2" /><Key frame="122" value="0.41" /><Key frame="128" value="0.2" /><Key frame="134" value="0.41" /><Key frame="140" value="0.2" /><Key frame="146" value="0.41" /><Key frame="152" value="0.2" /><Key frame="158" value="0.41" /><Key frame="164" value="0.2" /><Key frame="170" value="0.41" /><Key frame="176" value="0.2" /><Key frame="182" value="0.41" /><Key frame="188" value="0.2" /><Key frame="194" value="0.41" /><Key frame="200" value="0.2" /><Key frame="206" value="0.41" /><Key frame="212" value="0.2" /><Key frame="218" value="0.41" /><Key frame="225" value="0.2" /><Key frame="262" value="0.597894" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="38" value="-16.0345" /><Key frame="44" value="0.419685" /><Key frame="50" value="-16.0345" /><Key frame="56" value="0.419685" /><Key frame="62" value="-16.0345" /><Key frame="68" value="0.419685" /><Key frame="74" value="-16.0345" /><Key frame="80" value="0.419685" /><Key frame="86" value="-16.0345" /><Key frame="92" value="0.419685" /><Key frame="98" value="-16.0345" /><Key frame="104" value="0.419685" /><Key frame="110" value="-16.0345" /><Key frame="116" value="0.419685" /><Key frame="122" value="-16.0345" /><Key frame="128" value="0.419685" /><Key frame="134" value="-16.0345" /><Key frame="140" value="0.419685" /><Key frame="146" value="-16.0345" /><Key frame="152" value="0.419685" /><Key frame="158" value="-16.0345" /><Key frame="164" value="0.419685" /><Key frame="170" value="-16.0345" /><Key frame="176" value="0.419685" /><Key frame="182" value="-16.0345" /><Key frame="188" value="0.419685" /><Key frame="194" value="-16.0345" /><Key frame="200" value="0.419685" /><Key frame="206" value="-16.0345" /><Key frame="212" value="0.419685" /><Key frame="218" value="-16.0345" /><Key frame="225" value="0.419685" /><Key frame="262" value="89.344" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="38" value="2.68307" /><Key frame="44" value="2.68307" /><Key frame="50" value="2.68307" /><Key frame="56" value="2.68307" /><Key frame="62" value="2.68307" /><Key frame="68" value="2.68307" /><Key frame="74" value="2.68307" /><Key frame="80" value="2.68307" /><Key frame="86" value="2.68307" /><Key frame="92" value="2.68307" /><Key frame="98" value="2.68307" /><Key frame="104" value="2.68307" /><Key frame="110" value="2.68307" /><Key frame="116" value="2.68307" /><Key frame="122" value="2.68307" /><Key frame="128" value="2.68307" /><Key frame="134" value="2.68307" /><Key frame="140" value="2.68307" /><Key frame="146" value="2.68307" /><Key frame="152" value="2.68307" /><Key frame="158" value="2.68307" /><Key frame="164" value="2.68307" /><Key frame="170" value="2.68307" /><Key frame="176" value="2.68307" /><Key frame="182" value="2.68307" /><Key frame="188" value="2.68307" /><Key frame="194" value="2.68307" /><Key frame="200" value="2.68307" /><Key frame="206" value="2.68307" /><Key frame="212" value="2.68307" /><Key frame="218" value="2.68307" /><Key frame="225" value="2.68307" /><Key frame="262" value="8.50714" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="38" value="-66.4386" /><Key frame="44" value="-66.4386" /><Key frame="50" value="-66.4386" /><Key frame="56" value="-66.4386" /><Key frame="62" value="-66.4386" /><Key frame="68" value="-66.4386" /><Key frame="74" value="-66.4386" /><Key frame="80" value="-66.4386" /><Key frame="86" value="-66.4386" /><Key frame="92" value="-66.4386" /><Key frame="98" value="-66.4386" /><Key frame="104" value="-66.4386" /><Key frame="110" value="-66.4386" /><Key frame="116" value="-66.4386" /><Key frame="122" value="-66.4386" /><Key frame="128" value="-66.4386" /><Key frame="134" value="-66.4386" /><Key frame="140" value="-66.4386" /><Key frame="146" value="-66.4386" /><Key frame="152" value="-66.4386" /><Key frame="158" value="-66.4386" /><Key frame="164" value="-66.4386" /><Key frame="170" value="-66.4386" /><Key frame="176" value="-66.4386" /><Key frame="182" value="-66.4386" /><Key frame="188" value="-66.4386" /><Key frame="194" value="-66.4386" /><Key frame="200" value="-66.4386" /><Key frame="206" value="-66.4386" /><Key frame="212" value="-66.4386" /><Key frame="218" value="-66.4386" /><Key frame="225" value="-66.4386" /><Key frame="262" value="-0.202053" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="38" value="78.2778" /><Key frame="44" value="67.3" /><Key frame="50" value="78.2778" /><Key frame="56" value="67.3" /><Key frame="62" value="78.2778" /><Key frame="68" value="67.3" /><Key frame="74" value="78.2778" /><Key frame="80" value="67.3" /><Key frame="86" value="78.2778" /><Key frame="92" value="67.3" /><Key frame="98" value="78.2778" /><Key frame="104" value="67.3" /><Key frame="110" value="78.2778" /><Key frame="116" value="67.3" /><Key frame="122" value="78.2778" /><Key frame="128" value="67.3" /><Key frame="134" value="78.2778" /><Key frame="140" value="67.3" /><Key frame="146" value="78.2778" /><Key frame="152" value="67.3" /><Key frame="158" value="78.2778" /><Key frame="164" value="67.3" /><Key frame="170" value="78.2778" /><Key frame="176" value="67.3" /><Key frame="182" value="78.2778" /><Key frame="188" value="67.3" /><Key frame="194" value="78.2778" /><Key frame="200" value="67.3" /><Key frame="206" value="78.2778" /><Key frame="212" value="67.3" /><Key frame="218" value="78.2778" /><Key frame="225" value="67.3" /><Key frame="262" value="29.9806" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="38" value="71.274" /><Key frame="44" value="71.274" /><Key frame="50" value="71.274" /><Key frame="56" value="71.274" /><Key frame="62" value="71.274" /><Key frame="68" value="71.274" /><Key frame="74" value="71.274" /><Key frame="80" value="71.274" /><Key frame="86" value="71.274" /><Key frame="92" value="71.274" /><Key frame="98" value="71.274" /><Key frame="104" value="71.274" /><Key frame="110" value="71.274" /><Key frame="116" value="71.274" /><Key frame="122" value="71.274" /><Key frame="128" value="71.274" /><Key frame="134" value="71.274" /><Key frame="140" value="71.274" /><Key frame="146" value="71.274" /><Key frame="152" value="71.274" /><Key frame="158" value="71.274" /><Key frame="164" value="71.274" /><Key frame="170" value="71.274" /><Key frame="176" value="71.274" /><Key frame="182" value="71.274" /><Key frame="188" value="71.274" /><Key frame="194" value="71.274" /><Key frame="200" value="71.274" /><Key frame="206" value="71.274" /><Key frame="212" value="71.274" /><Key frame="218" value="71.274" /><Key frame="225" value="71.274" /><Key frame="262" value="70.3758" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="38" value="0.54" /><Key frame="44" value="0.66" /><Key frame="50" value="0.54" /><Key frame="56" value="0.66" /><Key frame="62" value="0.54" /><Key frame="68" value="0.66" /><Key frame="74" value="0.54" /><Key frame="80" value="0.66" /><Key frame="86" value="0.54" /><Key frame="92" value="0.66" /><Key frame="98" value="0.54" /><Key frame="104" value="0.66" /><Key frame="110" value="0.54" /><Key frame="116" value="0.66" /><Key frame="122" value="0.54" /><Key frame="128" value="0.66" /><Key frame="134" value="0.54" /><Key frame="140" value="0.66" /><Key frame="146" value="0.54" /><Key frame="152" value="0.66" /><Key frame="158" value="0.54" /><Key frame="164" value="0.66" /><Key frame="170" value="0.54" /><Key frame="176" value="0.66" /><Key frame="182" value="0.54" /><Key frame="188" value="0.66" /><Key frame="194" value="0.54" /><Key frame="200" value="0.66" /><Key frame="206" value="0.54" /><Key frame="212" value="0.66" /><Key frame="218" value="0.54" /><Key frame="225" value="0.66" /><Key frame="262" value="0.6" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="38" value="51.5274" /><Key frame="44" value="62.9519" /><Key frame="50" value="51.5274" /><Key frame="56" value="62.9519" /><Key frame="62" value="51.5274" /><Key frame="68" value="62.9519" /><Key frame="74" value="51.5274" /><Key frame="80" value="62.9519" /><Key frame="86" value="51.5274" /><Key frame="92" value="62.9519" /><Key frame="98" value="51.5274" /><Key frame="104" value="62.9519" /><Key frame="110" value="51.5274" /><Key frame="116" value="62.9519" /><Key frame="122" value="51.5274" /><Key frame="128" value="62.9519" /><Key frame="134" value="51.5274" /><Key frame="140" value="62.9519" /><Key frame="146" value="51.5274" /><Key frame="152" value="62.9519" /><Key frame="158" value="51.5274" /><Key frame="164" value="62.9519" /><Key frame="170" value="51.5274" /><Key frame="176" value="62.9519" /><Key frame="182" value="51.5274" /><Key frame="188" value="62.9519" /><Key frame="194" value="51.5274" /><Key frame="200" value="62.9519" /><Key frame="206" value="51.5274" /><Key frame="212" value="62.9519" /><Key frame="218" value="51.5274" /><Key frame="225" value="62.9519" /><Key frame="262" value="88.8733" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="38" value="-8.58942" /><Key frame="44" value="-8.58942" /><Key frame="50" value="-8.58942" /><Key frame="56" value="-8.58942" /><Key frame="62" value="-8.58942" /><Key frame="68" value="-8.58942" /><Key frame="74" value="-8.58942" /><Key frame="80" value="-8.58942" /><Key frame="86" value="-8.58942" /><Key frame="92" value="-8.58942" /><Key frame="98" value="-8.58942" /><Key frame="104" value="-8.58942" /><Key frame="110" value="-8.58942" /><Key frame="116" value="-8.58942" /><Key frame="122" value="-8.58942" /><Key frame="128" value="-8.58942" /><Key frame="134" value="-8.58942" /><Key frame="140" value="-8.58942" /><Key frame="146" value="-8.58942" /><Key frame="152" value="-8.58942" /><Key frame="158" value="-8.58942" /><Key frame="164" value="-8.58942" /><Key frame="170" value="-8.58942" /><Key frame="176" value="-8.58942" /><Key frame="182" value="-8.58942" /><Key frame="188" value="-8.58942" /><Key frame="194" value="-8.58942" /><Key frame="200" value="-8.58942" /><Key frame="206" value="-8.58942" /><Key frame="212" value="-8.58942" /><Key frame="218" value="-8.58942" /><Key frame="225" value="-8.58942" /><Key frame="262" value="-7.95474" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="38" value="0" /><Key frame="44" value="0" /><Key frame="50" value="0" /><Key frame="56" value="0" /><Key frame="62" value="0" /><Key frame="68" value="0" /><Key frame="74" value="0" /><Key frame="80" value="0" /><Key frame="86" value="0" /><Key frame="92" value="0" /><Key frame="98" value="0" /><Key frame="104" value="0" /><Key frame="110" value="0" /><Key frame="116" value="0" /><Key frame="122" value="0" /><Key frame="128" value="0" /><Key frame="134" value="0" /><Key frame="140" value="0" /><Key frame="146" value="0" /><Key frame="152" value="0" /><Key frame="158" value="0" /><Key frame="164" value="0" /><Key frame="170" value="0" /><Key frame="176" value="0" /><Key frame="182" value="0" /><Key frame="188" value="0" /><Key frame="194" value="0" /><Key frame="200" value="0" /><Key frame="206" value="0" /><Key frame="212" value="0" /><Key frame="218" value="0" /><Key frame="225" value="0" /><Key frame="262" value="-0.102843" /></ActuatorCurve></ActuatorList></Timeline><Resource name="Standing" type="Lock" timeout="1" /><Resource name="All motors" type="Lock" timeout="1" /><Resource name="Speakers" type="Lock" timeout="1" /></Box><Box name="Guitar" id="14" localization="8" tooltip="ID : #04D 0002&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Entertainment&#x0A;- Dances&#x0A;- Headbang" x="940" y="28"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="287"><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="26" value="7.55628" /><Key frame="39" value="-0.529755" /><Key frame="50" value="15.2908" /><Key frame="75" value="-14.9715" /><Key frame="86" value="9.40201" /><Key frame="92" value="-11.5437" /><Key frame="102" value="11.9509" /><Key frame="110" value="3.1617" /><Key frame="120" value="-13.5183" /><Key frame="127" value="5.49971" /><Key frame="140" value="13.8553" /><Key frame="151" value="-9.40302" /><Key frame="160" value="-13.0066" /><Key frame="171" value="4.26921" /><Key frame="178" value="10.5974" /><Key frame="212" value="-15.825" /><Key frame="220" value="6.77121" /><Key frame="233" value="-6.50261" /><Key frame="243" value="8.61691" /><Key frame="281" value="-11.0006" /><Key frame="287" value="-11.2138" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="26" value="14.6755" /><Key frame="39" value="13.6208" /><Key frame="67" value="7.46839" /><Key frame="75" value="0.612838" /><Key frame="92" value="1.93121" /><Key frame="110" value="17.7517" /><Key frame="120" value="17.2244" /><Key frame="127" value="21.4432" /><Key frame="140" value="20.3496" /><Key frame="151" value="13.1814" /><Key frame="160" value="13.0056" /><Key frame="171" value="15.2908" /><Key frame="188" value="14.9392" /><Key frame="220" value="-6.56512" /><Key frame="243" value="-0.178188" /><Key frame="266" value="11.1598" /><Key frame="281" value="0.210386" /><Key frame="287" value="0.163687" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="12" value="-1.97851" /><Key frame="36" value="-24.0718" /><Key frame="47" value="-17.3873" /><Key frame="117" value="-17.0612" /><Key frame="129" value="-6.50907" /><Key frame="148" value="-6.50907" /><Key frame="168" value="-17.1692" /><Key frame="185" value="-17.1692" /><Key frame="198" value="-6.10369" /><Key frame="217" value="-17.2009" /><Key frame="231" value="-16.6204" /><Key frame="244" value="-22.5053" /><Key frame="251" value="-21.8842" /><Key frame="268" value="-18.1128" /><Key frame="281" value="-3.23608" /><Key frame="287" value="-2.74407" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="12" value="-0.433542" /><Key frame="36" value="-2.28016" /><Key frame="47" value="-8.11443" /><Key frame="64" value="-3.91495" /><Key frame="89" value="-9.71783" /><Key frame="129" value="-7.46617" /><Key frame="148" value="-0.175686" /><Key frame="168" value="3.53842" /><Key frame="185" value="3.53842" /><Key frame="198" value="0.269135" /><Key frame="217" value="3.39891" /><Key frame="231" value="3.39891" /><Key frame="268" value="-2.66845" /><Key frame="281" value="-0.362005" /><Key frame="287" value="-0.133749" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="12" value="-0.573235" /><Key frame="36" value="13.6999" /><Key frame="47" value="9.20669" /><Key frame="117" value="9.20669" /><Key frame="129" value="1.90279" /><Key frame="148" value="1.90279" /><Key frame="168" value="9.84374" /><Key frame="185" value="9.84374" /><Key frame="198" value="1.91406" /><Key frame="217" value="10.2565" /><Key frame="231" value="10.2565" /><Key frame="244" value="16.6653" /><Key frame="251" value="16.0867" /><Key frame="268" value="9.04071" /><Key frame="281" value="-0.173133" /><Key frame="287" value="-0.659074" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="12" value="-37" /><Key frame="23" value="-58.545" /><Key frame="36" value="-58.0177" /><Key frame="47" value="-61.5333" /><Key frame="64" value="-73.2229" /><Key frame="83" value="-66.8068" /><Key frame="89" value="-66.8947" /><Key frame="99" value="-66.5432" /><Key frame="107" value="-66.1037" /><Key frame="117" value="-60.3907" /><Key frame="124" value="-70.1467" /><Key frame="137" value="-73.2229" /><Key frame="148" value="-72.1682" /><Key frame="157" value="-67.6857" /><Key frame="168" value="-73.3108" /><Key frame="175" value="-69.883" /><Key frame="185" value="-70.1467" /><Key frame="198" value="-63.2033" /><Key frame="209" value="-64.6974" /><Key frame="217" value="-64.8732" /><Key frame="230" value="-61.2697" /><Key frame="240" value="-60.5665" /><Key frame="248" value="-59.0724" /><Key frame="263" value="-67.6094" /><Key frame="274" value="-52.5" /><Key frame="281" value="-33.5273" /><Key frame="287" value="-29.9557" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="12" value="-91" /><Key frame="23" value="-116.723" /><Key frame="36" value="-110" /><Key frame="47" value="-111.625" /><Key frame="64" value="-92.4645" /><Key frame="83" value="-102.924" /><Key frame="89" value="-103.978" /><Key frame="99" value="-91.8493" /><Key frame="107" value="-93.695" /><Key frame="117" value="-102.308" /><Key frame="124" value="-93.8708" /><Key frame="137" value="-92.7282" /><Key frame="148" value="-87.5426" /><Key frame="157" value="-90.0914" /><Key frame="168" value="-76.2045" /><Key frame="175" value="-79.3686" /><Key frame="185" value="-70.8431" /><Key frame="198" value="-78.9292" /><Key frame="209" value="-85.6089" /><Key frame="217" value="-86.6636" /><Key frame="230" value="-76.8198" /><Key frame="240" value="-84.4664" /><Key frame="248" value="-85.2574" /><Key frame="263" value="-65.6575" /><Key frame="274" value="-59.2" /><Key frame="281" value="-68.5901" /><Key frame="287" value="-70.7426" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="12" value="0.636364" /><Key frame="23" value="0.345455" /><Key frame="36" value="0.254545" /><Key frame="47" value="0.381818" /><Key frame="89" value="0.366571" /><Key frame="99" value="0.0909091" /><Key frame="107" value="0.127273" /><Key frame="124" value="0.218182" /><Key frame="137" value="0.343298" /><Key frame="148" value="0.254545" /><Key frame="157" value="0.332753" /><Key frame="168" value="0.127273" /><Key frame="175" value="0.127273" /><Key frame="198" value="0.254545" /><Key frame="209" value="0.127273" /><Key frame="217" value="0.0909091" /><Key frame="230" value="0.176364" /><Key frame="240" value="0.0909091" /><Key frame="263" value="0.145455" /><Key frame="281" value="0.589875" /><Key frame="287" value="0.597963" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="23" value="32.0315" /><Key frame="36" value="29.3948" /><Key frame="47" value="24.0334" /><Key frame="64" value="27.8127" /><Key frame="83" value="28.7795" /><Key frame="89" value="27.3732" /><Key frame="99" value="25.6154" /><Key frame="107" value="25.0002" /><Key frame="117" value="32.2952" /><Key frame="124" value="33.4378" /><Key frame="137" value="34.7562" /><Key frame="148" value="36.3382" /><Key frame="157" value="38.6234" /><Key frame="168" value="36.9534" /><Key frame="175" value="36.6898" /><Key frame="185" value="37.5687" /><Key frame="198" value="31.9436" /><Key frame="209" value="35.1956" /><Key frame="217" value="33.8772" /><Key frame="230" value="28.5158" /><Key frame="240" value="30.6252" /><Key frame="248" value="29.9221" /><Key frame="263" value="20.437" /><Key frame="281" value="86.9996" /><Key frame="287" value="89.0357" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="23" value="29.7929" /><Key frame="36" value="29.4413" /><Key frame="47" value="27.6835" /><Key frame="64" value="26.453" /><Key frame="83" value="48.4259" /><Key frame="89" value="51.6779" /><Key frame="99" value="32.3418" /><Key frame="107" value="32.5175" /><Key frame="117" value="58.9729" /><Key frame="124" value="56.0725" /><Key frame="137" value="56.4241" /><Key frame="148" value="43.5919" /><Key frame="157" value="51.4143" /><Key frame="168" value="47.3712" /><Key frame="175" value="47.4591" /><Key frame="185" value="36.5606" /><Key frame="198" value="36.6484" /><Key frame="209" value="51.0627" /><Key frame="217" value="46.0529" /><Key frame="230" value="22.6737" /><Key frame="240" value="25.3104" /><Key frame="248" value="26.1014" /><Key frame="263" value="39.6368" /><Key frame="281" value="9.16962" /><Key frame="287" value="8.51138" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="12" value="-72" /><Key frame="23" value="-80" /><Key frame="36" value="-87" /><Key frame="47" value="-83" /><Key frame="64" value="-86" /><Key frame="83" value="-100" /><Key frame="89" value="-104" /><Key frame="107" value="-81.478" /><Key frame="117" value="-104" /><Key frame="124" value="-104.066" /><Key frame="137" value="-104.496" /><Key frame="157" value="-104.496" /><Key frame="175" value="-100.551" /><Key frame="198" value="-98.529" /><Key frame="217" value="-104.242" /><Key frame="240" value="-88.0699" /><Key frame="263" value="-98" /><Key frame="281" value="-3.1253" /><Key frame="287" value="-0.328876" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="24" value="71.6962" /><Key frame="37" value="75.6513" /><Key frame="48" value="53.5905" /><Key frame="55" value="68.0048" /><Key frame="65" value="59.3035" /><Key frame="73" value="50.778" /><Key frame="84" value="42.6041" /><Key frame="90" value="42.6041" /><Key frame="100" value="62.2918" /><Key frame="108" value="54.3815" /><Key frame="118" value="68.7079" /><Key frame="125" value="48.9676" /><Key frame="138" value="37.7643" /><Key frame="149" value="71.872" /><Key frame="158" value="52.6237" /><Key frame="164" value="76.433" /><Key frame="169" value="55.6999" /><Key frame="176" value="72.8388" /><Key frame="186" value="47.3502" /><Key frame="199" value="36.5395" /><Key frame="210" value="72.9267" /><Key frame="218" value="53.9421" /><Key frame="225" value="71.3447" /><Key frame="231" value="47.7018" /><Key frame="241" value="73.1025" /><Key frame="249" value="51.5752" /><Key frame="264" value="31.7116" /><Key frame="275" value="44.6" /><Key frame="281" value="33.7262" /><Key frame="287" value="29.9781" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="24" value="32.4813" /><Key frame="37" value="41.2705" /><Key frame="48" value="7.02893" /><Key frame="55" value="27.3319" /><Key frame="65" value="23.992" /><Key frame="73" value="5.71056" /><Key frame="84" value="-3.51807" /><Key frame="90" value="-3.69386" /><Key frame="100" value="25.7499" /><Key frame="108" value="1.14019" /><Key frame="118" value="37.2379" /><Key frame="125" value="0.349163" /><Key frame="138" value="7.90785" /><Key frame="149" value="35.9453" /><Key frame="158" value="8.87466" /><Key frame="164" value="41.1309" /><Key frame="169" value="8.78677" /><Key frame="176" value="33.6601" /><Key frame="186" value="13.5329" /><Key frame="199" value="13.3571" /><Key frame="210" value="35.1543" /><Key frame="218" value="14.3239" /><Key frame="225" value="39.8125" /><Key frame="231" value="-0.79343" /><Key frame="241" value="26.6288" /><Key frame="249" value="4.74375" /><Key frame="264" value="13.8845" /><Key frame="275" value="68.1" /><Key frame="281" value="69.6515" /><Key frame="287" value="69.9674" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="24" value="0.454545" /><Key frame="37" value="0.45348" /><Key frame="48" value="0.672727" /><Key frame="55" value="0.287273" /><Key frame="65" value="0.381818" /><Key frame="84" value="0.690909" /><Key frame="90" value="0.654545" /><Key frame="100" value="0.305455" /><Key frame="108" value="0.418182" /><Key frame="118" value="0.345455" /><Key frame="125" value="0.654545" /><Key frame="138" value="0.749091" /><Key frame="158" value="0.469091" /><Key frame="164" value="0.327273" /><Key frame="169" value="0.436364" /><Key frame="176" value="0.318182" /><Key frame="186" value="0.545455" /><Key frame="199" value="0.727273" /><Key frame="210" value="0.436364" /><Key frame="218" value="0.729115" /><Key frame="225" value="0.490909" /><Key frame="231" value="0.618182" /><Key frame="241" value="0.490909" /><Key frame="249" value="0.745455" /><Key frame="264" value="0.662205" /><Key frame="281" value="0.613137" /><Key frame="287" value="0.607433" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="24" value="25.2015" /><Key frame="37" value="25.641" /><Key frame="48" value="31.8813" /><Key frame="55" value="26.6078" /><Key frame="65" value="26.3441" /><Key frame="73" value="30.2113" /><Key frame="84" value="32.5844" /><Key frame="90" value="33.3754" /><Key frame="100" value="22.8284" /><Key frame="108" value="27.4867" /><Key frame="118" value="12.2814" /><Key frame="125" value="40.9341" /><Key frame="138" value="48.7565" /><Key frame="149" value="42.1646" /><Key frame="158" value="44.5377" /><Key frame="164" value="34.9575" /><Key frame="169" value="38.2974" /><Key frame="176" value="35.3969" /><Key frame="186" value="51.3932" /><Key frame="199" value="57.0183" /><Key frame="210" value="31.9692" /><Key frame="218" value="39.1763" /><Key frame="225" value="20.2796" /><Key frame="231" value="33.9028" /><Key frame="241" value="26.5199" /><Key frame="249" value="35.6606" /><Key frame="264" value="57.1062" /><Key frame="281" value="88.5927" /><Key frame="287" value="89.1702" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="24" value="-31.5969" /><Key frame="37" value="-27.2903" /><Key frame="48" value="-22.3424" /><Key frame="55" value="-21.112" /><Key frame="65" value="-19.442" /><Key frame="73" value="-21.3756" /><Key frame="84" value="-21.3756" /><Key frame="90" value="-21.5514" /><Key frame="100" value="-15.5748" /><Key frame="108" value="-18.1236" /><Key frame="118" value="-15.6627" /><Key frame="125" value="-30.9558" /><Key frame="138" value="-32.0984" /><Key frame="149" value="-28.4948" /><Key frame="158" value="-28.3191" /><Key frame="164" value="-27.0007" /><Key frame="169" value="-25.946" /><Key frame="176" value="-23.7487" /><Key frame="186" value="-25.5065" /><Key frame="199" value="-25.946" /><Key frame="210" value="-26.737" /><Key frame="218" value="-32.1863" /><Key frame="225" value="-26.6491" /><Key frame="231" value="-28.2312" /><Key frame="241" value="-26.6491" /><Key frame="249" value="-20.9362" /><Key frame="264" value="-44.1396" /><Key frame="281" value="-9.99848" /><Key frame="287" value="-8.75354" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="24" value="58" /><Key frame="37" value="57.6546" /><Key frame="55" value="56.6878" /><Key frame="65" value="56.5999" /><Key frame="90" value="57.5667" /><Key frame="100" value="58.6214" /><Key frame="125" value="59.3245" /><Key frame="138" value="58.5335" /><Key frame="158" value="58.9729" /><Key frame="169" value="58.6214" /><Key frame="186" value="57.303" /><Key frame="210" value="68" /><Key frame="218" value="47" /><Key frame="225" value="63" /><Key frame="231" value="53" /><Key frame="241" value="59" /><Key frame="249" value="49" /><Key frame="264" value="44" /><Key frame="281" value="0.980029" /><Key frame="287" value="0.060775" /></ActuatorCurve></ActuatorList></Timeline><Resource name="Standing" type="Lock" timeout="1" /><Resource name="All motors" type="Lock" timeout="1" /></Box><Box name="Vacuum" id="9" localization="8" tooltip="ID : #04C 0001&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Mystical" x="1225" y="144"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="256"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe25" index="25"><Diagram><Box name="Play Sound" id="1" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be&#x0A;wav, mp3, or ogg." x="191" y="111"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Parameter name="File path" inherits_from_parent="0" content_type="4" value="/vacuum1.ogg" default_value="" tooltip="Path of the file (including its name) which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project resources and import&#x0A;files in the resources." id="5" /><Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" /><Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" /><Parameter name="Panorama" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" /><Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Panorama"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Panorama"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" /><Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" /><Parameter name="Panorama" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" /><Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" /><Resource name="Audio player" type="Stop on demand" timeout="0" /></Box><Box name="Get File Path" id="1" localization="8" tooltip="Use this box to choose a resource file in its parameters. The filepath will be sent on&#x0A;the output when the input is stimulated." x="216" y="71"><bitmap>media/images/box/folder.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
    def onInput_onStart(self):
        self.onStopped(self.behaviorAbsolutePath() + self.getParameter("File path"))]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" /><Parameter name="File path" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Path of the file (including its name) which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project resources and import&#x0A;files in the resources." id="4" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" /></Diagram></BehaviorKeyframe></BehaviorLayer><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="34" value="6.9" /><Key frame="51" value="13.1096" /><Key frame="68" value="8.4" /><Key frame="88" value="13.1096" /><Key frame="108" value="7.3" /><Key frame="128" value="13.1096" /><Key frame="148" value="7.3" /><Key frame="160" value="13.1096" /><Key frame="180" value="7.3" /><Key frame="201" value="13.1096" /><Key frame="215" value="13.0957" /><Key frame="256" value="-12.041" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="34" value="46.1211" /><Key frame="51" value="46.1467" /><Key frame="68" value="46.1467" /><Key frame="88" value="46.1467" /><Key frame="108" value="46.1467" /><Key frame="128" value="46.1467" /><Key frame="148" value="46.1467" /><Key frame="160" value="46.1467" /><Key frame="180" value="46.1467" /><Key frame="201" value="46.1467" /><Key frame="215" value="46.4062" /><Key frame="256" value="-0.527345" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="34" value="-25.9118" /><Key frame="51" value="-25.6922" /><Key frame="68" value="-25.6922" /><Key frame="88" value="-25.6922" /><Key frame="108" value="-25.6922" /><Key frame="128" value="-25.6922" /><Key frame="148" value="-25.6922" /><Key frame="160" value="-25.6922" /><Key frame="180" value="-25.6922" /><Key frame="201" value="-25.6922" /><Key frame="215" value="-26.543" /><Key frame="256" value="-1.58204" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="34" value="14.3815" /><Key frame="51" value="11" /><Key frame="68" value="20" /><Key frame="88" value="14.2509" /><Key frame="108" value="20" /><Key frame="128" value="14.2509" /><Key frame="148" value="20" /><Key frame="160" value="14.2509" /><Key frame="180" value="20" /><Key frame="201" value="14.2509" /><Key frame="215" value="13.4473" /><Key frame="256" value="0.527345" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="34" value="8.80359" /><Key frame="51" value="8.96485" /><Key frame="68" value="8.96485" /><Key frame="88" value="8.96485" /><Key frame="108" value="8.96485" /><Key frame="128" value="8.96485" /><Key frame="148" value="8.96485" /><Key frame="160" value="8.96485" /><Key frame="180" value="8.96485" /><Key frame="201" value="8.96485" /><Key frame="215" value="8.87695" /><Key frame="256" value="-0.0878909" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="34" value="-17.9391" /><Key frame="51" value="-18.4443" /><Key frame="68" value="-4.5" /><Key frame="88" value="-18.4443" /><Key frame="108" value="-4.5" /><Key frame="128" value="-18.4443" /><Key frame="148" value="-4.5" /><Key frame="160" value="-18.4443" /><Key frame="180" value="-4.5" /><Key frame="201" value="-18.4443" /><Key frame="215" value="-18.2812" /><Key frame="256" value="-29.7949" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="34" value="-118.997" /><Key frame="51" value="-118.818" /><Key frame="68" value="-118.818" /><Key frame="88" value="-118.818" /><Key frame="108" value="-118.818" /><Key frame="128" value="-118.818" /><Key frame="148" value="-118.818" /><Key frame="160" value="-118.818" /><Key frame="180" value="-118.818" /><Key frame="201" value="-118.818" /><Key frame="215" value="-118.74" /><Key frame="256" value="-70.5762" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="34" value="0.71" /><Key frame="51" value="0.704153" /><Key frame="68" value="0.704153" /><Key frame="88" value="0.704153" /><Key frame="108" value="0.704153" /><Key frame="128" value="0.704153" /><Key frame="148" value="0.704153" /><Key frame="160" value="0.704153" /><Key frame="180" value="0.704153" /><Key frame="201" value="0.704153" /><Key frame="215" value="0.702988" /><Key frame="256" value="0.605448" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="34" value="60.2622" /><Key frame="51" value="53.5" /><Key frame="68" value="60.8236" /><Key frame="88" value="74.6" /><Key frame="108" value="60.8236" /><Key frame="128" value="74.6" /><Key frame="148" value="60.8236" /><Key frame="160" value="74.6" /><Key frame="180" value="60.8236" /><Key frame="201" value="74.6" /><Key frame="215" value="74.6191" /><Key frame="256" value="90" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="34" value="16.5896" /><Key frame="51" value="8.2" /><Key frame="68" value="37.4272" /><Key frame="88" value="12.8" /><Key frame="108" value="37.4272" /><Key frame="128" value="12.8" /><Key frame="148" value="37.4272" /><Key frame="160" value="12.8" /><Key frame="180" value="37.4272" /><Key frame="201" value="12.8" /><Key frame="215" value="12.9199" /><Key frame="256" value="8.61328" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="34" value="-12.7355" /><Key frame="51" value="-12.196" /><Key frame="68" value="-12.196" /><Key frame="88" value="-12.196" /><Key frame="108" value="-12.196" /><Key frame="128" value="-12.196" /><Key frame="148" value="-12.196" /><Key frame="160" value="-12.196" /><Key frame="180" value="-12.196" /><Key frame="201" value="-12.196" /><Key frame="215" value="-11.9557" /><Key frame="256" value="-1.145" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="34" value="53.2991" /><Key frame="51" value="52.8664" /><Key frame="68" value="52.16" /><Key frame="88" value="52.8664" /><Key frame="108" value="52.16" /><Key frame="128" value="52.8664" /><Key frame="148" value="52.16" /><Key frame="160" value="52.8664" /><Key frame="180" value="52.16" /><Key frame="201" value="52.8664" /><Key frame="215" value="52.5586" /><Key frame="256" value="29.5313" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="34" value="16.8631" /><Key frame="51" value="36" /><Key frame="68" value="16.8809" /><Key frame="88" value="36" /><Key frame="108" value="16.8809" /><Key frame="128" value="36" /><Key frame="148" value="16.8809" /><Key frame="160" value="36" /><Key frame="180" value="16.8809" /><Key frame="201" value="36" /><Key frame="215" value="35.7715" /><Key frame="256" value="70.0488" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="34" value="0.609393" /><Key frame="51" value="0.609393" /><Key frame="68" value="0.609393" /><Key frame="88" value="0.609393" /><Key frame="108" value="0.609393" /><Key frame="128" value="0.609393" /><Key frame="148" value="0.609393" /><Key frame="160" value="0.609393" /><Key frame="180" value="0.609393" /><Key frame="201" value="0.609393" /><Key frame="215" value="0.601054" /><Key frame="256" value="0.601933" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="34" value="47.764" /><Key frame="51" value="72" /><Key frame="68" value="49.6378" /><Key frame="88" value="72" /><Key frame="108" value="49.6378" /><Key frame="128" value="72" /><Key frame="148" value="49.6378" /><Key frame="160" value="72" /><Key frame="180" value="49.6378" /><Key frame="201" value="72" /><Key frame="215" value="71.9824" /><Key frame="256" value="89.8242" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="34" value="-6.34558" /><Key frame="51" value="-20.7" /><Key frame="68" value="-4.31767" /><Key frame="88" value="-20.7" /><Key frame="108" value="-4.31767" /><Key frame="128" value="-20.7" /><Key frame="148" value="-4.31767" /><Key frame="160" value="-20.7" /><Key frame="180" value="-4.31767" /><Key frame="201" value="-20.7" /><Key frame="215" value="-20.127" /><Key frame="256" value="-8.61328" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="34" value="0.586875" /><Key frame="51" value="0.586875" /><Key frame="68" value="0.586875" /><Key frame="88" value="0.586875" /><Key frame="108" value="0.586875" /><Key frame="128" value="0.586875" /><Key frame="148" value="0.586875" /><Key frame="160" value="0.586875" /><Key frame="180" value="0.586875" /><Key frame="201" value="0.586875" /><Key frame="215" value="-0.0902951" /><Key frame="256" value="-0.705531" /></ActuatorCurve></ActuatorList></Timeline><Resource name="Standing" type="Lock" timeout="1" /><Resource name="All motors" type="Lock" timeout="1" /><Resource name="Speakers" type="Lock" timeout="1" /></Box><Box name="Mystical" id="15" localization="8" tooltip="ID : #04C 0002&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Mystical" x="1226" y="266"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="199"><BehaviorLayer name="LED"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="blinks" id="3" localization="8" tooltip="blinks" x="593" y="27"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):


        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0x000000, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );

        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );

        return;


    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Box name="CircleEyes" id="4" localization="8" tooltip="tags:&#x0A;LED&#x0A;Change the color inside the box!" x="337" y="4"><bitmap>media/images/box/interaction/LED.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Parameter name="Speed" inherits_from_parent="0" content_type="2" value="0.5" default_value="0.7" min="0.02" max="2" tooltip="" id="5" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="CircleLED" id="1" localization="8" tooltip="Beautiful eyes circle animation" x="354" y="39"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[def circleLedsEyes( nColor, rTime, nNbrTurn ):
  # launch a leds animation using one color
  nNbrSegment = 8;
  for i in range( nNbrSegment*nNbrTurn ):
    ALLeds.post.fadeRGB( "FaceLed%d" % (i%nNbrSegment) , nColor, rTime );
    ALLeds.post.fadeRGB( "FaceLed%d" % (i%nNbrSegment) , 0x000000, rTime*1.25 );
    time.sleep( rTime*0.25 );
  time.sleep( rTime*0.5 ); # wait last time
# circleLedsEyes - end

class MyClass(GeneratedClass):
  """ comments """
  def __init__(self):
    GeneratedClass.__init__(self);
    self.bMustStop = False;
    self.bIsRunning = False;

  def onUnload(self):
    self.onInput_onStop(); # will stop current loop execution

  def onInput_onStart(self, p):
    self.log( self.getName() + ": start - begin" );

    if( self.bIsRunning ):
      print( self.getName() + ": already started => nothing" );
      return;

    self.bIsRunning = True;
    self.bMustStop = False;

    while( not self.bMustStop ):
      circleLedsEyes( (p[0]<<16) + (p[1] << 8) + p[2], self.getParameter("Speed"), 1 );
    # end while
    self.bIsRunning = False;
    self.onStopped();

  def onInput_onStop(self):
    self.bMustStop = True; # will stop current loop execution]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Parameter name="Speed" inherits_from_parent="1" content_type="2" value="0.7" default_value="0.7" min="0.02" max="2" tooltip="" id="5" /></Box><Box name="Color" id="2" localization="8" tooltip="Enter tooltip here" plugin="coloredit_plugin" x="177" y="39"><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped([255, 255, 255])]]></content></script><pluginContent><color>#ffffff</color></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Wait" id="6" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="134" y="89"><bitmap>media/images/box/wait.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" /><Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" /><Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="6" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" /><Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" /></Box><Link inputowner="3" indexofinput="2" outputowner="4" indexofoutput="4" /><Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="1" /><Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="1" /><Link inputowner="4" indexofinput="2" outputowner="6" indexofoutput="4" /></Diagram></BehaviorKeyframe></BehaviorLayer><BehaviorLayer name="FX"><BehaviorKeyframe name="keyframe50" index="50"><Diagram><Box name="Play Sound" id="1" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be&#x0A;wav, mp3, or ogg." x="79" y="46"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Parameter name="File path" inherits_from_parent="0" content_type="4" value="/behavior_1/heaven1.ogg" default_value="" tooltip="Path of the file (including its name) which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project resources and import&#x0A;files in the resources." id="5" /><Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" /><Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" /><Parameter name="Panorama" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" /><Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Panorama"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Panorama"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" /><Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" /><Parameter name="Panorama" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" /><Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" /><Resource name="Audio player" type="Stop on demand" timeout="0" /></Box><Box name="Get File Path" id="1" localization="8" tooltip="Use this box to choose a resource file in its parameters. The filepath will be sent on&#x0A;the output when the input is stimulated." x="216" y="71"><bitmap>media/images/box/folder.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
    def onInput_onStart(self):
        self.onStopped(self.behaviorAbsolutePath() + self.getParameter("File path"))]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" /><Parameter name="File path" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Path of the file (including its name) which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project resources and import&#x0A;files in the resources." id="4" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" /></Diagram></BehaviorKeyframe></BehaviorLayer><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="34" value="15.2029" /><Key frame="82" value="-31.1161" /><Key frame="116" value="-37.2685" /><Key frame="153" value="-38.5" /><Key frame="178" value="-25" /><Key frame="199" value="-12.0436" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="34" value="-2.11181" /><Key frame="82" value="-2.28759" /><Key frame="116" value="-3.43018" /><Key frame="153" value="-3.16651" /><Key frame="199" value="-1.145" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="30" value="-21.8848" /><Key frame="58" value="-21.3" /><Key frame="149" value="3.95508" /><Key frame="199" value="-2.41055" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="30" value="0" /><Key frame="149" value="0" /><Key frame="199" value="0" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="30" value="11.3379" /><Key frame="149" value="-0.439454" /><Key frame="199" value="-0.518318" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="32" value="-22.2342" /><Key frame="80" value="-30.8476" /><Key frame="114" value="-53.3479" /><Key frame="151" value="-47.547" /><Key frame="176" value="-80" /><Key frame="197" value="-24.0799" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="32" value="-113.207" /><Key frame="58" value="-50" /><Key frame="80" value="-98.7048" /><Key frame="114" value="-74.9741" /><Key frame="151" value="-75.0619" /><Key frame="197" value="-66.5364" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="80" value="0.598182" /><Key frame="114" value="0.872727" /><Key frame="151" value="0.875296" /><Key frame="197" value="0.3008" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="32" value="83.1432" /><Key frame="80" value="-35.7743" /><Key frame="114" value="-39.29" /><Key frame="151" value="-40.6963" /><Key frame="197" value="86.3952" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="32" value="19.5975" /><Key frame="58" value="58" /><Key frame="80" value="33.8359" /><Key frame="114" value="18.367" /><Key frame="151" value="16.1697" /><Key frame="197" value="4.83164" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="80" value="-15" /><Key frame="114" value="-58" /><Key frame="151" value="-66" /><Key frame="176" value="-66" /><Key frame="197" value="7.3805" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="30" value="25.7547" /><Key frame="78" value="28.3914" /><Key frame="112" value="50.0128" /><Key frame="149" value="40.3447" /><Key frame="174" value="78" /><Key frame="195" value="25.0515" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="30" value="119.496" /><Key frame="56" value="43" /><Key frame="78" value="79.4517" /><Key frame="112" value="69.8715" /><Key frame="149" value="70.311" /><Key frame="195" value="66.1801" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="78" value="0.650909" /><Key frame="112" value="0.854545" /><Key frame="149" value="0.852024" /><Key frame="195" value="0.3016" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="30" value="82.0054" /><Key frame="78" value="-40.4278" /><Key frame="112" value="-40.6915" /><Key frame="149" value="-46.3165" /><Key frame="195" value="87.4547" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="30" value="-20.7449" /><Key frame="56" value="-66" /><Key frame="78" value="-42.7178" /><Key frame="112" value="-18.4597" /><Key frame="149" value="-15.1198" /><Key frame="195" value="-4.66067" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="78" value="25" /><Key frame="112" value="58" /><Key frame="149" value="57.8303" /><Key frame="174" value="64" /><Key frame="195" value="9.92936" /></ActuatorCurve></ActuatorList></Timeline><Resource name="Standing" type="Lock" timeout="1" /><Resource name="All motors" type="Lock" timeout="1" /><Resource name="Left eye leds" type="Lock" timeout="1" /><Resource name="Right eye leds" type="Lock" timeout="1" /><Resource name="Speakers" type="Lock" timeout="1" /></Box><Box name="Tai Chi Chuan" id="11" localization="8" tooltip="ID : #04B 0001&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Taichi" x="1081" y="264"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="5" start_frame="1" end_frame="-1" size="250"><BehaviorLayer name="LED"><BehaviorKeyframe name="keyframe15" index="15"><Diagram><Box name="Light_ConcentratedEyes" id="1" localization="8" tooltip="Set an animated gaze which expresses concentration." x="122" y="24"><bitmap>media/images/box/interaction/LED.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
  def __init__(self):
    GeneratedClass.__init__(self, False)

  def onLoad(self):
    self.bIsRunning = False;
    self.leds = ALProxy("ALLeds")

  def onUnload(self):
    self.onInput_onStop(); # will stop current loop execution

  def onInput_onStart(self):
    #self.log( self.getName() + ": start - begin" );

    if( self.bIsRunning ):
      #print( self.getName() + ": already started => nothing" );
      return;

    self.bIsRunning = True;
    self.bMustStop = False;

    rDuration = 1.0;
    self.leds.post.fadeRGB( "FaceLedsTop", 0x0000ff, rDuration );
    self.leds.post.fadeRGB( "FaceLedsInternal", 0x00ff00, rDuration );
    self.leds.post.fadeRGB( "FaceLedsBottom", 0x0000ff, rDuration );
    self.leds.fadeRGB( "FaceLedsExternal", 0x0000ff, rDuration );

    while( not self.bMustStop ):
      rTime=1.0
      self.leds.fadeRGB( "FaceLedsInternal", 0x000000, rTime );
      if( self.bMustStop ):
        break;
      self.leds.fadeRGB( "FaceLedsInternal", 0x00ff00, rDuration );


    # end while
    self.bIsRunning = False;
    self.onStopped();

  def onInput_onStop(self):
    self.bMustStop = True; # will stop current loop execution]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" /></Diagram></BehaviorKeyframe></BehaviorLayer><BehaviorLayer name="music"><BehaviorKeyframe name="keyframe14" index="14"><Diagram><Box name="Play Sound" id="2" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be&#x0A;wav, mp3, or ogg.&#x0A;&#x0A;Note: There can be some delay to play mp3 files. We advise you to use wav if&#x0A;you want a fast play of the file." x="124" y="57"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Parameter name="File name" inherits_from_parent="0" content_type="4" value="/swiftswords_ext.mp3" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" /><Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" /><Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" /><Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" /><Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" /><Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" /><Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" /><Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" /></Box><Box name="Get Attached File" id="1" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="216" y="71"><bitmap>media/images/box/folder.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        pass

    def onInput_onStart(self):
        self.onStopped(self.behaviorAbsolutePath() + self.getParameter("File name"))]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" /><Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" /></Diagram></BehaviorKeyframe></BehaviorLayer><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe25" index="25"><Diagram><Box name="Move Along" id="3" localization="8" tooltip="Move along a trajectory given by an attached .pmt file.&#x0A;&#x0A;V1.0.0&#x0A;" x="286" y="184"><bitmap>media/images/box/movement/walk_forward.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy("ALMotion")
        self.navigation = ALProxy("ALNavigation")

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.move(0., 0., 0.)

    def onInput_onStart(self):
        relativePath = self.getParameter("Planar Move Trajectory")
        if len(relativePath) == 0:
            self.failure()
            return

        behaviorPath = self.behaviorAbsolutePath()
        trajectoryPath = behaviorPath + relativePath

        trajectoryData = str()
        with open(trajectoryPath, 'r') as trajectoryFile:
            trajectoryData = trajectoryFile.read()
        trajectory = eval(trajectoryData)

        if trajectory[0] != "Composed": # dealing with trajectories with radius
            trajectory = trajectory[0]

        result = self.navigation.moveAlong(trajectory)
        if (result):
            self.success()
        else:
            self.failure()

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the trajectory was correctly executed." id="4" /><Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the trajectory was stopped to avoid collisions." id="5" /><Parameter name="Planar Move Trajectory" inherits_from_parent="0" content_type="4" value="/taichimove.pmt" default_value="" tooltip="" id="6" /></Box><Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="1" /></Diagram></BehaviorKeyframe></BehaviorLayer><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="15" value="0" /><Key frame="25" value="5.12931e-06" /><Key frame="35" value="-2.73208e-05" /><Key frame="45" value="5.0962e-06" /><Key frame="55" value="6.01466e-06" /><Key frame="65" value="19" /><Key frame="75" value="18" /><Key frame="85" value="5.26559e-06" /><Key frame="95" value="-19" /><Key frame="105" value="8" /><Key frame="118" value="-5" /><Key frame="131" value="8" /><Key frame="142" value="22" /><Key frame="152" value="32" /><Key frame="162" value="22" /><Key frame="172" value="-19" /><Key frame="185" value="8" /><Key frame="198" value="-5" /><Key frame="211" value="8" /><Key frame="222" value="22" /><Key frame="231" value="0" /><Key frame="250" value="-10.901" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="15" value="0" /><Key frame="25" value="4.82967e-06" /><Key frame="35" value="4.82968e-06" /><Key frame="45" value="4.82968e-06" /><Key frame="55" value="-2.73208e-05" /><Key frame="65" value="18" /><Key frame="75" value="-17" /><Key frame="85" value="-68" /><Key frame="95" value="-16" /><Key frame="105" value="12" /><Key frame="118" value="90" /><Key frame="131" value="12" /><Key frame="142" value="8" /><Key frame="152" value="0" /><Key frame="162" value="-8" /><Key frame="172" value="16" /><Key frame="185" value="-12" /><Key frame="198" value="-90" /><Key frame="211" value="-12" /><Key frame="222" value="-8" /><Key frame="231" value="0" /><Key frame="250" value="-0.178186" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="15" value="0" /><Key frame="25" value="-40" /><Key frame="35" value="-60" /><Key frame="45" value="0" /><Key frame="55" value="0" /><Key frame="65" value="-95" /><Key frame="75" value="-55" /><Key frame="85" value="-85" /><Key frame="95" value="-58" /><Key frame="105" value="-58" /><Key frame="118" value="0" /><Key frame="131" value="-58" /><Key frame="142" value="-58" /><Key frame="152" value="-51" /><Key frame="162" value="-49" /><Key frame="172" value="-64" /><Key frame="185" value="-49" /><Key frame="198" value="-72" /><Key frame="211" value="-49" /><Key frame="222" value="-49" /><Key frame="227" value="-57" /><Key frame="231" value="-81.4" /><Key frame="250" value="-22.2342" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="15" value="-90" /><Key frame="25" value="-90" /><Key frame="35" value="-90" /><Key frame="45" value="-90" /><Key frame="55" value="-90" /><Key frame="65" value="-22" /><Key frame="75" value="0" /><Key frame="85" value="0" /><Key frame="95" value="0" /><Key frame="105" value="0" /><Key frame="118" value="0" /><Key frame="131" value="0" /><Key frame="142" value="0" /><Key frame="152" value="12" /><Key frame="162" value="11" /><Key frame="172" value="-24" /><Key frame="185" value="-24" /><Key frame="198" value="-5" /><Key frame="211" value="-24" /><Key frame="222" value="11" /><Key frame="227" value="-21.7" /><Key frame="231" value="-14" /><Key frame="250" value="-67.7669" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="15" value="0" /><Key frame="250" value="0.2984" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="15" value="90" /><Key frame="25" value="110" /><Key frame="35" value="120" /><Key frame="45" value="90" /><Key frame="55" value="0" /><Key frame="65" value="21" /><Key frame="75" value="20" /><Key frame="85" value="11" /><Key frame="95" value="-46" /><Key frame="105" value="-10" /><Key frame="118" value="-17" /><Key frame="131" value="-10" /><Key frame="142" value="30" /><Key frame="152" value="27" /><Key frame="162" value="19" /><Key frame="172" value="-27" /><Key frame="185" value="4" /><Key frame="198" value="-4" /><Key frame="211" value="4" /><Key frame="222" value="19" /><Key frame="231" value="97" /><Key frame="250" value="87.6256" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="15" value="10" /><Key frame="25" value="20" /><Key frame="35" value="10" /><Key frame="45" value="10" /><Key frame="55" value="10" /><Key frame="65" value="40" /><Key frame="75" value="0" /><Key frame="85" value="5" /><Key frame="95" value="10" /><Key frame="105" value="23" /><Key frame="118" value="66" /><Key frame="131" value="23" /><Key frame="142" value="23" /><Key frame="152" value="10" /><Key frame="162" value="0" /><Key frame="172" value="23" /><Key frame="185" value="0" /><Key frame="198" value="0" /><Key frame="211" value="0" /><Key frame="222" value="12" /><Key frame="231" value="54" /><Key frame="250" value="6.15001" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="15" value="-88" /><Key frame="250" value="7.99575" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="15" value="0" /><Key frame="25" value="40" /><Key frame="35" value="60" /><Key frame="45" value="1.47493e-05" /><Key frame="55" value="0" /><Key frame="65" value="71" /><Key frame="75" value="94" /><Key frame="85" value="4" /><Key frame="95" value="64" /><Key frame="105" value="49" /><Key frame="118" value="72" /><Key frame="131" value="49" /><Key frame="142" value="49" /><Key frame="152" value="51" /><Key frame="162" value="58" /><Key frame="172" value="58" /><Key frame="185" value="58" /><Key frame="198" value="2" /><Key frame="211" value="58" /><Key frame="222" value="58" /><Key frame="227" value="64.9" /><Key frame="231" value="78.3" /><Key frame="250" value="22.6785" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="15" value="90" /><Key frame="25" value="90" /><Key frame="35" value="90" /><Key frame="45" value="90" /><Key frame="55" value="90" /><Key frame="65" value="11" /><Key frame="75" value="20" /><Key frame="85" value="90" /><Key frame="95" value="24" /><Key frame="105" value="24" /><Key frame="118" value="5" /><Key frame="131" value="24" /><Key frame="142" value="-11" /><Key frame="152" value="-12" /><Key frame="162" value="0" /><Key frame="172" value="0" /><Key frame="185" value="0" /><Key frame="198" value="0" /><Key frame="211" value="0" /><Key frame="222" value="0" /><Key frame="227" value="19.6" /><Key frame="231" value="14" /><Key frame="250" value="66.4437" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="15" value="0" /><Key frame="250" value="0.302" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="15" value="90" /><Key frame="25" value="110" /><Key frame="35" value="120" /><Key frame="45" value="90" /><Key frame="55" value="0" /><Key frame="65" value="10" /><Key frame="75" value="35" /><Key frame="85" value="60" /><Key frame="95" value="-27" /><Key frame="105" value="4" /><Key frame="118" value="-4" /><Key frame="131" value="4" /><Key frame="142" value="19" /><Key frame="152" value="27" /><Key frame="162" value="30" /><Key frame="172" value="-46" /><Key frame="185" value="-10" /><Key frame="198" value="-17" /><Key frame="211" value="-10" /><Key frame="222" value="30" /><Key frame="231" value="97" /><Key frame="250" value="86.8394" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="15" value="-10" /><Key frame="25" value="-10" /><Key frame="35" value="-20" /><Key frame="45" value="-10" /><Key frame="55" value="-9.99896" /><Key frame="65" value="-4" /><Key frame="75" value="-48" /><Key frame="85" value="-87" /><Key frame="95" value="-23" /><Key frame="105" value="0" /><Key frame="118" value="0" /><Key frame="131" value="0" /><Key frame="142" value="0" /><Key frame="152" value="-10" /><Key frame="162" value="-23" /><Key frame="172" value="-10" /><Key frame="185" value="-23" /><Key frame="198" value="-66" /><Key frame="211" value="-23" /><Key frame="222" value="-32" /><Key frame="231" value="-54" /><Key frame="250" value="-5.71537" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="15" value="88" /><Key frame="250" value="9.40201" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="35" value="-17.6" /><Key frame="55" value="-2.54899" /><Key frame="65" value="-25.4827" /><Key frame="95" value="-2.60473" /><Key frame="142" value="-25.4827" /><Key frame="172" value="-2.60473" /><Key frame="185" value="-25.4827" /><Key frame="198" value="-2.60473" /><Key frame="211" value="-25.4827" /><Key frame="222" value="-2.60473" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="55" value="0.0495414" /><Key frame="65" value="0.412492" /><Key frame="95" value="0.412492" /><Key frame="142" value="0.412492" /><Key frame="172" value="0.412492" /><Key frame="185" value="0.412492" /><Key frame="198" value="0.412492" /><Key frame="211" value="0.412492" /><Key frame="222" value="0.412492" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="35" value="5.7" /><Key frame="55" value="-0.823679" /><Key frame="65" value="10.2134" /><Key frame="95" value="-0.650842" /><Key frame="142" value="10.2134" /><Key frame="172" value="-0.650842" /><Key frame="185" value="10.2134" /><Key frame="198" value="-0.650842" /><Key frame="211" value="10.2134" /><Key frame="222" value="-0.650842" /></ActuatorCurve></ActuatorList></Timeline><Resource name="Standing" type="Lock" timeout="1" /><Resource name="All motors" type="Lock" timeout="1" /><Resource name="Left eye leds" type="Lock" timeout="1" /><Resource name="Right eye leds" type="Lock" timeout="1" /><Resource name="Speakers" type="Lock" timeout="1" /></Box><Box name="Disco" id="16" localization="8" tooltip="ID : #04B 0002&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Disco" x="1195" y="486"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="412"><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="39" value="-27.3" /><Key frame="60" value="19.4" /><Key frame="84" value="-27.3" /><Key frame="105" value="19.4" /><Key frame="128" value="-27.3" /><Key frame="149" value="19.4" /><Key frame="173" value="-27.3" /><Key frame="194" value="19.4" /><Key frame="205" value="3.9" /><Key frame="222" value="-27.3" /><Key frame="243" value="19.4" /><Key frame="267" value="-27.3" /><Key frame="288" value="19.4" /><Key frame="311" value="-27.3" /><Key frame="332" value="19.4" /><Key frame="356" value="-27.3" /><Key frame="377" value="19.4" /><Key frame="407" value="-9.84628" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="39" value="-42.7" /><Key frame="60" value="2.3554" /><Key frame="84" value="-42.7" /><Key frame="105" value="2.3554" /><Key frame="128" value="-42.7" /><Key frame="149" value="1.06043" /><Key frame="173" value="-42.7" /><Key frame="194" value="16.6" /><Key frame="205" value="24.3899" /><Key frame="222" value="42.7" /><Key frame="243" value="-2.3554" /><Key frame="267" value="42.7" /><Key frame="288" value="-2.3554" /><Key frame="311" value="42.7" /><Key frame="332" value="-1.06043" /><Key frame="356" value="42.7" /><Key frame="377" value="-16.6" /><Key frame="407" value="0.524941" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="19" value="-21.5451" /><Key frame="39" value="-2.11731" /><Key frame="60" value="-19.7111" /><Key frame="84" value="-2.31524" /><Key frame="105" value="-19.4711" /><Key frame="128" value="-2.19563" /><Key frame="149" value="-19.5819" /><Key frame="173" value="-2.10479" /><Key frame="194" value="-19.9487" /><Key frame="222" value="-2.01022" /><Key frame="243" value="-19.5819" /><Key frame="267" value="-2.19306" /><Key frame="288" value="-19.4593" /><Key frame="311" value="-2.26915" /><Key frame="332" value="-19.5725" /><Key frame="356" value="-2.07819" /><Key frame="377" value="-19.6562" /><Key frame="407" value="-2.83774" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="39" value="0" /><Key frame="60" value="0" /><Key frame="84" value="0" /><Key frame="105" value="0" /><Key frame="128" value="0" /><Key frame="149" value="0" /><Key frame="173" value="0" /><Key frame="194" value="0" /><Key frame="222" value="0" /><Key frame="243" value="0" /><Key frame="267" value="0" /><Key frame="288" value="0" /><Key frame="311" value="0" /><Key frame="332" value="0" /><Key frame="356" value="0" /><Key frame="377" value="0" /><Key frame="407" value="0" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="19" value="9.5664" /><Key frame="39" value="-0.217285" /><Key frame="60" value="10.6541" /><Key frame="84" value="-0.741057" /><Key frame="105" value="10.3603" /><Key frame="128" value="-0.183873" /><Key frame="149" value="10.7163" /><Key frame="173" value="-0.533559" /><Key frame="194" value="10.4371" /><Key frame="222" value="-0.637434" /><Key frame="243" value="10.7163" /><Key frame="267" value="-0.391448" /><Key frame="288" value="10.5677" /><Key frame="311" value="-0.684319" /><Key frame="332" value="10.2675" /><Key frame="356" value="-0.658193" /><Key frame="377" value="10.7539" /><Key frame="407" value="-0.754414" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="18" value="-78.6607" /><Key frame="27" value="-64.7" /><Key frame="38" value="-21.1795" /><Key frame="59" value="-11.5993" /><Key frame="83" value="-21.1795" /><Key frame="104" value="-11.5993" /><Key frame="127" value="-21.1795" /><Key frame="148" value="-11.5993" /><Key frame="172" value="-21.1795" /><Key frame="193" value="-11.5993" /><Key frame="204" value="-47" /><Key frame="213" value="-13.3528" /><Key frame="221" value="-7.91266" /><Key frame="231" value="-75" /><Key frame="242" value="-14.7682" /><Key frame="254" value="-83.6" /><Key frame="266" value="-7.91266" /><Key frame="276" value="-75" /><Key frame="287" value="-14.7682" /><Key frame="299" value="-83.6" /><Key frame="310" value="-7.91266" /><Key frame="320" value="-75" /><Key frame="331" value="-14.7682" /><Key frame="343" value="-83.6" /><Key frame="355" value="-7.91266" /><Key frame="365" value="-75" /><Key frame="376" value="-14.7682" /><Key frame="391" value="-56.4" /><Key frame="406" value="-29.4496" /><Key frame="411" value="-24.3436" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="18" value="-37.5322" /><Key frame="38" value="-21.7996" /><Key frame="59" value="-35.4228" /><Key frame="83" value="-21.7996" /><Key frame="104" value="-35.4228" /><Key frame="127" value="-21.7996" /><Key frame="148" value="-35.4228" /><Key frame="172" value="-21.7996" /><Key frame="193" value="-35.4228" /><Key frame="204" value="23.5" /><Key frame="213" value="46.8836" /><Key frame="221" value="48.7823" /><Key frame="231" value="4.3" /><Key frame="242" value="0.090296" /><Key frame="254" value="26.4" /><Key frame="266" value="48.7823" /><Key frame="276" value="4.3" /><Key frame="287" value="0.090296" /><Key frame="299" value="26.4" /><Key frame="310" value="48.7823" /><Key frame="320" value="4.3" /><Key frame="331" value="0.090296" /><Key frame="343" value="26.4" /><Key frame="355" value="48.7823" /><Key frame="365" value="4.3" /><Key frame="376" value="0.090296" /><Key frame="391" value="-77.1" /><Key frame="406" value="-70.1779" /><Key frame="411" value="-69.349" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="18" value="0.2" /><Key frame="27" value="0.6" /><Key frame="38" value="0.2648" /><Key frame="59" value="0.264" /><Key frame="83" value="0.2648" /><Key frame="104" value="0.264" /><Key frame="127" value="0.2648" /><Key frame="148" value="0.264" /><Key frame="172" value="0.2648" /><Key frame="193" value="0.264" /><Key frame="213" value="0.663802" /><Key frame="221" value="0.928" /><Key frame="231" value="0.3" /><Key frame="242" value="0.0283999" /><Key frame="254" value="0.75" /><Key frame="266" value="0.928" /><Key frame="276" value="0.3" /><Key frame="287" value="0.0283999" /><Key frame="299" value="0.75" /><Key frame="310" value="0.928" /><Key frame="320" value="0.3" /><Key frame="331" value="0.0283999" /><Key frame="343" value="0.75" /><Key frame="355" value="0.928" /><Key frame="365" value="0.3" /><Key frame="376" value="0.5284" /><Key frame="391" value="0.936396" /><Key frame="406" value="0.950347" /><Key frame="411" value="0.2968" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="18" value="56.0261" /><Key frame="38" value="74.2401" /><Key frame="59" value="80.481" /><Key frame="83" value="74.2401" /><Key frame="104" value="80.481" /><Key frame="127" value="74.2401" /><Key frame="148" value="80.481" /><Key frame="172" value="74.2401" /><Key frame="193" value="80.481" /><Key frame="204" value="9.9" /><Key frame="213" value="-60.1055" /><Key frame="221" value="-68.2895" /><Key frame="242" value="57.0441" /><Key frame="266" value="-68.2895" /><Key frame="287" value="57.0441" /><Key frame="310" value="-68.2895" /><Key frame="331" value="57.0441" /><Key frame="355" value="-68.2895" /><Key frame="376" value="57.0441" /><Key frame="411" value="84.2858" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="18" value="28.6506" /><Key frame="38" value="23.0255" /><Key frame="59" value="20.3887" /><Key frame="83" value="23.0255" /><Key frame="104" value="20.3887" /><Key frame="127" value="23.0255" /><Key frame="148" value="20.3887" /><Key frame="172" value="23.0255" /><Key frame="193" value="20.3887" /><Key frame="213" value="50.79" /><Key frame="221" value="55.3753" /><Key frame="231" value="70.6641" /><Key frame="242" value="18.5641" /><Key frame="254" value="70.6641" /><Key frame="266" value="55.3753" /><Key frame="276" value="70.6641" /><Key frame="287" value="18.5641" /><Key frame="299" value="70.6641" /><Key frame="310" value="55.3753" /><Key frame="320" value="70.6641" /><Key frame="331" value="18.5641" /><Key frame="343" value="70.6641" /><Key frame="355" value="55.3753" /><Key frame="365" value="70.6641" /><Key frame="376" value="18.5641" /><Key frame="391" value="23.3482" /><Key frame="406" value="8.42198" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="18" value="6.85315" /><Key frame="27" value="-16.6" /><Key frame="38" value="-22.6785" /><Key frame="59" value="-24.0847" /><Key frame="83" value="-22.6785" /><Key frame="104" value="-24.0847" /><Key frame="127" value="-22.6785" /><Key frame="148" value="-24.0847" /><Key frame="172" value="-22.6785" /><Key frame="193" value="-24.0847" /><Key frame="213" value="-7.04428" /><Key frame="221" value="-6.15002" /><Key frame="242" value="-22.9373" /><Key frame="266" value="-6.15002" /><Key frame="287" value="-22.9373" /><Key frame="310" value="-6.15002" /><Key frame="331" value="-22.9373" /><Key frame="355" value="-6.15002" /><Key frame="376" value="-22.9373" /><Key frame="406" value="0.0212173" /><Key frame="411" value="4.74374" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="19" value="77.1713" /><Key frame="28" value="64.2" /><Key frame="39" value="7.91266" /><Key frame="49" value="75" /><Key frame="60" value="14.7682" /><Key frame="72" value="83.6" /><Key frame="84" value="7.91266" /><Key frame="94" value="75" /><Key frame="105" value="14.7682" /><Key frame="117" value="83.6" /><Key frame="128" value="7.91266" /><Key frame="138" value="75" /><Key frame="149" value="14.7682" /><Key frame="161" value="83.6" /><Key frame="173" value="7.91266" /><Key frame="183" value="75" /><Key frame="194" value="14.7682" /><Key frame="214" value="21.3189" /><Key frame="222" value="21.1795" /><Key frame="243" value="11.5993" /><Key frame="267" value="21.1795" /><Key frame="288" value="11.5993" /><Key frame="311" value="21.1795" /><Key frame="332" value="11.5993" /><Key frame="356" value="21.1795" /><Key frame="377" value="11.5993" /><Key frame="392" value="47.1" /><Key frame="407" value="29.769" /><Key frame="412" value="24.6121" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="19" value="34.0996" /><Key frame="28" value="32.5" /><Key frame="39" value="-48.7823" /><Key frame="49" value="-4.3" /><Key frame="60" value="-0.090296" /><Key frame="72" value="-26.4" /><Key frame="84" value="-48.7823" /><Key frame="94" value="-4.3" /><Key frame="105" value="-0.090296" /><Key frame="117" value="-26.4" /><Key frame="128" value="-48.7823" /><Key frame="138" value="-4.3" /><Key frame="149" value="-0.090296" /><Key frame="161" value="-26.4" /><Key frame="173" value="-48.7823" /><Key frame="183" value="-4.3" /><Key frame="194" value="-0.090296" /><Key frame="214" value="20.1841" /><Key frame="222" value="21.7996" /><Key frame="243" value="35.4228" /><Key frame="267" value="21.7996" /><Key frame="288" value="35.4228" /><Key frame="311" value="21.7996" /><Key frame="332" value="35.4228" /><Key frame="356" value="21.7996" /><Key frame="377" value="35.4228" /><Key frame="392" value="72.6" /><Key frame="407" value="70.5493" /><Key frame="412" value="69.3442" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="19" value="0.2" /><Key frame="28" value="0.95" /><Key frame="39" value="0.928" /><Key frame="49" value="0.3" /><Key frame="60" value="0.0283999" /><Key frame="72" value="0.75" /><Key frame="84" value="0.928" /><Key frame="94" value="0.3" /><Key frame="105" value="0.0283999" /><Key frame="117" value="0.75" /><Key frame="128" value="0.928" /><Key frame="138" value="0.3" /><Key frame="149" value="0.0283999" /><Key frame="161" value="0.75" /><Key frame="173" value="0.928" /><Key frame="183" value="0.3" /><Key frame="194" value="0.5284" /><Key frame="214" value="0.271478" /><Key frame="222" value="0.2648" /><Key frame="243" value="0.264" /><Key frame="267" value="0.2648" /><Key frame="288" value="0.264" /><Key frame="311" value="0.2648" /><Key frame="332" value="0.264" /><Key frame="356" value="0.2648" /><Key frame="377" value="0.264" /><Key frame="407" value="0.596785" /><Key frame="412" value="0.2976" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="19" value="52.4738" /><Key frame="39" value="-68.2895" /><Key frame="60" value="57.0441" /><Key frame="84" value="-68.2895" /><Key frame="105" value="57.0441" /><Key frame="128" value="-68.2895" /><Key frame="149" value="57.0441" /><Key frame="173" value="-68.2895" /><Key frame="194" value="57.0441" /><Key frame="214" value="73.396" /><Key frame="222" value="74.2401" /><Key frame="243" value="80.481" /><Key frame="267" value="74.2401" /><Key frame="288" value="80.481" /><Key frame="311" value="74.2401" /><Key frame="332" value="80.481" /><Key frame="356" value="74.2401" /><Key frame="377" value="80.481" /><Key frame="407" value="84.3785" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="19" value="-51.8597" /><Key frame="28" value="-74.9641" /><Key frame="39" value="-55.3753" /><Key frame="49" value="-70.6641" /><Key frame="60" value="-18.5641" /><Key frame="72" value="-70.6641" /><Key frame="84" value="-55.3753" /><Key frame="94" value="-70.6641" /><Key frame="105" value="-18.5641" /><Key frame="117" value="-70.6641" /><Key frame="128" value="-55.3753" /><Key frame="138" value="-70.6641" /><Key frame="149" value="-18.5641" /><Key frame="161" value="-70.6641" /><Key frame="173" value="-55.3753" /><Key frame="183" value="-70.6641" /><Key frame="194" value="-18.5641" /><Key frame="214" value="-22.7677" /><Key frame="222" value="-23.0255" /><Key frame="243" value="-20.3887" /><Key frame="267" value="-23.0255" /><Key frame="288" value="-20.3887" /><Key frame="311" value="-23.0255" /><Key frame="332" value="-20.3887" /><Key frame="356" value="-23.0255" /><Key frame="377" value="-20.3887" /><Key frame="392" value="-17.8" /><Key frame="412" value="-10" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="19" value="-23.03" /><Key frame="39" value="6.15002" /><Key frame="60" value="22.9373" /><Key frame="84" value="6.15002" /><Key frame="105" value="22.9373" /><Key frame="128" value="6.15002" /><Key frame="149" value="22.9373" /><Key frame="173" value="6.15002" /><Key frame="194" value="22.9373" /><Key frame="214" value="22.4535" /><Key frame="222" value="22.6785" /><Key frame="243" value="24.0847" /><Key frame="267" value="22.6785" /><Key frame="288" value="24.0847" /><Key frame="311" value="22.6785" /><Key frame="332" value="24.0847" /><Key frame="356" value="22.6785" /><Key frame="377" value="24.0847" /><Key frame="407" value="0.287525" /><Key frame="412" value="6.2379" /></ActuatorCurve></ActuatorList></Timeline><Resource name="Standing" type="Lock" timeout="1" /><Resource name="All motors" type="Lock" timeout="1" /></Box><Box name="Headbang" id="17" localization="8" tooltip="ID : #04B 0003&#x0A;&#x0A;===================&#x0A;&#x0A;Tags :&#x0A;- Headbang" x="1057" y="548"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="301"><BehaviorLayer name="behavior_layer1" mute="1"><BehaviorKeyframe name="keyframe1_copy" index="1"><Diagram><Box name="mischievous" id="1" localization="8" tooltip="mischievous" x="97" y="36"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.bMustStop = False;
        self.bIsRunning = False;

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        self.onInput_onStop();

    def onInput_onStart(self):
        if( self.bIsRunning ):

            return;

        rDuration = 0.3;
        self.bMustStop = False;
        self.bIsRunning = True;

        while( not self.bMustStop ):
            ALLeds.post.fadeRGB( "FaceLed0", 0x060033, rDuration );
            ALLeds.post.fadeRGB( "FaceLed1", 0xf33300, rDuration );
            ALLeds.post.fadeRGB( "FaceLed2", 0xff3300, rDuration );
            ALLeds.post.fadeRGB( "FaceLed3", 0x701a00, rDuration );
            ALLeds.post.fadeRGB( "FaceLed4", 0xff1a00, rDuration );
            ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
            ALLeds.post.fadeRGB( "FaceLed6", 0x000000, rDuration );
            ALLeds.post.fadeRGB( "FaceLed7", 0x000000, rDuration );

            #time.sleep( 0.1 );

            ALLeds.post.fadeRGB( "FaceLed0", 0x140000, rDuration*3 );
            ALLeds.post.fadeRGB( "FaceLed1", 0xff3300, rDuration*3 );
            ALLeds.post.fadeRGB( "FaceLed2", 0xff0033, rDuration*3 );
            ALLeds.post.fadeRGB( "FaceLed3", 0xf51a00, rDuration*3 );
            ALLeds.post.fadeRGB( "FaceLed4", 0xff1a00, rDuration*3 );
            ALLeds.post.fadeRGB( "FaceLed5", 0xff0033, rDuration*3 );
            ALLeds.post.fadeRGB( "FaceLed6", 0x7c0000, rDuration*3 );
            ALLeds.fadeRGB( "FaceLed7", 0x260000, rDuration*3 );

            if( self.bMustStop ):
                break;

        self.bIsRunning = False;
        self.onStopped();

    def onInput_onStop(self):
        self.bMustStop = True;]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" /></Diagram></BehaviorKeyframe></BehaviorLayer><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="14" value="-12.3072" /><Key frame="23" value="12.4782" /><Key frame="36" value="-17.9323" /><Key frame="50" value="11.7751" /><Key frame="67" value="-17.7565" /><Key frame="80" value="10.6325" /><Key frame="94" value="-10.6373" /><Key frame="112" value="18.1033" /><Key frame="128" value="-13.8893" /><Key frame="145" value="12.5661" /><Key frame="161" value="-19.9538" /><Key frame="179" value="13.5329" /><Key frame="195" value="-18.3718" /><Key frame="212" value="14.8898" /><Key frame="221" value="-22.4847" /><Key frame="229" value="4.80263" /><Key frame="238" value="-15.0151" /><Key frame="246" value="3.78123" /><Key frame="253" value="-11.9858" /><Key frame="261" value="4.55645" /><Key frame="268" value="-5.32874" /><Key frame="278" value="11.5304" /><Key frame="290" value="8.81216" /><Key frame="301" value="-10.1978" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="14" value="-4.92434" /><Key frame="23" value="-4.57277" /><Key frame="36" value="-3.86964" /><Key frame="50" value="-5.53958" /><Key frame="67" value="-3.16651" /><Key frame="80" value="-1.76024" /><Key frame="94" value="-1.23289" /><Key frame="112" value="-3.34229" /><Key frame="128" value="-1.145" /><Key frame="145" value="-2.55126" /><Key frame="161" value="-3.2544" /><Key frame="179" value="-3.95753" /><Key frame="195" value="-5.89115" /><Key frame="212" value="-11.1647" /><Key frame="221" value="-9.49471" /><Key frame="229" value="-4.3091" /><Key frame="238" value="-0.705538" /><Key frame="246" value="-0.00240423" /><Key frame="253" value="-1.84813" /><Key frame="261" value="-2.46337" /><Key frame="268" value="-3.16651" /><Key frame="278" value="1.84332" /><Key frame="301" value="-0.090296" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="22" value="-25.7409" /><Key frame="35" value="-10.3033" /><Key frame="49" value="-25.7409" /><Key frame="66" value="-10.3033" /><Key frame="79" value="-25.7409" /><Key frame="93" value="-10.3033" /><Key frame="111" value="-19.581" /><Key frame="127" value="-10.3033" /><Key frame="144" value="-14.961" /><Key frame="160" value="-10.3033" /><Key frame="178" value="-14.961" /><Key frame="194" value="-10.3033" /><Key frame="211" value="-14.961" /><Key frame="245" value="-10.3033" /><Key frame="277" value="-25.7409" /><Key frame="290" value="-10.3033" /><Key frame="300" value="-2.57699" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="22" value="0" /><Key frame="35" value="0" /><Key frame="49" value="0" /><Key frame="66" value="0" /><Key frame="79" value="0" /><Key frame="93" value="0" /><Key frame="111" value="0" /><Key frame="127" value="0" /><Key frame="144" value="0" /><Key frame="160" value="0" /><Key frame="178" value="0" /><Key frame="194" value="0" /><Key frame="211" value="0" /><Key frame="245" value="0" /><Key frame="277" value="0" /><Key frame="290" value="0" /><Key frame="300" value="-0.00165662" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="22" value="14.0637" /><Key frame="35" value="4.14042" /><Key frame="49" value="14.0637" /><Key frame="66" value="4.14042" /><Key frame="79" value="14.0637" /><Key frame="93" value="4.14042" /><Key frame="111" value="12.5237" /><Key frame="127" value="4.14042" /><Key frame="144" value="9.44376" /><Key frame="160" value="4.14042" /><Key frame="178" value="9.44376" /><Key frame="194" value="4.14042" /><Key frame="211" value="9.44376" /><Key frame="245" value="4.14042" /><Key frame="277" value="14.0637" /><Key frame="290" value="4.14042" /><Key frame="300" value="-0.638153" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="20" value="-29.8808" /><Key frame="33" value="-29.7929" /><Key frame="47" value="-36.209" /><Key frame="64" value="-31.3749" /><Key frame="77" value="-31.8144" /><Key frame="91" value="-56.9514" /><Key frame="109" value="-56.4" /><Key frame="125" value="-78.8413" /><Key frame="142" value="-40.0762" /><Key frame="158" value="-88.5925" /><Key frame="176" value="-29.0019" /><Key frame="192" value="-88.5925" /><Key frame="209" value="-58.5335" /><Key frame="226" value="-66.0043" /><Key frame="243" value="-68.9047" /><Key frame="258" value="-53.6994" /><Key frame="275" value="-72.0688" /><Key frame="298" value="-33.8359" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="20" value="-88.3336" /><Key frame="33" value="-98.2654" /><Key frame="47" value="-102.748" /><Key frame="64" value="-104.242" /><Key frame="77" value="-95.3649" /><Key frame="91" value="-45.8" /><Key frame="109" value="-49.837" /><Key frame="125" value="-25.662" /><Key frame="142" value="-33.7528" /><Key frame="158" value="-80.0718" /><Key frame="176" value="-28.1278" /><Key frame="192" value="-80.0718" /><Key frame="209" value="-66.5364" /><Key frame="226" value="-53.88" /><Key frame="243" value="-53.5285" /><Key frame="258" value="-51.7706" /><Key frame="275" value="-45.3545" /><Key frame="298" value="-69.7005" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="20" value="0.230571" /><Key frame="33" value="0.230935" /><Key frame="64" value="0.230935" /><Key frame="91" value="0.224389" /><Key frame="109" value="0.618182" /><Key frame="125" value="0.45" /><Key frame="142" value="0.83" /><Key frame="158" value="0.43" /><Key frame="176" value="0.91" /><Key frame="192" value="0.51" /><Key frame="209" value="0.688387" /><Key frame="226" value="0.6992" /><Key frame="243" value="0.6992" /><Key frame="275" value="0.684" /><Key frame="298" value="0.232025" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="20" value="97.2937" /><Key frame="33" value="96.8543" /><Key frame="47" value="90.5261" /><Key frame="64" value="95.9754" /><Key frame="77" value="92.1081" /><Key frame="91" value="50.4" /><Key frame="109" value="-27.8" /><Key frame="125" value="-65.0375" /><Key frame="142" value="-41.2236" /><Key frame="158" value="-23.5574" /><Key frame="176" value="-54.7589" /><Key frame="192" value="-23.5574" /><Key frame="209" value="47.3" /><Key frame="226" value="76.7271" /><Key frame="243" value="82.44" /><Key frame="258" value="87.0983" /><Key frame="275" value="78.6607" /><Key frame="298" value="91.4929" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="20" value="9.84147" /><Key frame="33" value="10.0173" /><Key frame="47" value="6.85315" /><Key frame="64" value="7.02893" /><Key frame="77" value="6.41369" /><Key frame="91" value="26.2" /><Key frame="109" value="15.2" /><Key frame="125" value="58.1867" /><Key frame="142" value="24.2557" /><Key frame="158" value="64.4222" /><Key frame="176" value="11.072" /><Key frame="192" value="64.4222" /><Key frame="209" value="21.0916" /><Key frame="226" value="23.6405" /><Key frame="243" value="23.8163" /><Key frame="258" value="20.8279" /><Key frame="275" value="23.6405" /><Key frame="298" value="10.0173" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="20" value="5.44688" /><Key frame="33" value="5.53477" /><Key frame="64" value="5.44688" /><Key frame="91" value="12.7" /><Key frame="109" value="33" /><Key frame="125" value="7.91266" /><Key frame="142" value="18" /><Key frame="176" value="18.2791" /><Key frame="209" value="16.1697" /><Key frame="226" value="-15.8229" /><Key frame="243" value="-10.8131" /><Key frame="275" value="2.45857" /><Key frame="298" value="6.67737" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="21" value="56.9562" /><Key frame="34" value="86.5758" /><Key frame="48" value="50.3644" /><Key frame="65" value="89.5" /><Key frame="78" value="59.593" /><Key frame="92" value="89.5" /><Key frame="110" value="33.2255" /><Key frame="126" value="78.8413" /><Key frame="143" value="34.8075" /><Key frame="159" value="83.4995" /><Key frame="177" value="34.7196" /><Key frame="193" value="88.773" /><Key frame="210" value="38.7627" /><Key frame="227" value="51.1554" /><Key frame="244" value="57.3957" /><Key frame="259" value="45.7061" /><Key frame="276" value="65.0423" /><Key frame="299" value="25.2273" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="12" value="39.1" /><Key frame="21" value="10.2809" /><Key frame="34" value="31.3749" /><Key frame="48" value="10.7204" /><Key frame="65" value="31.9023" /><Key frame="78" value="18.5428" /><Key frame="92" value="31.2871" /><Key frame="110" value="11.6872" /><Key frame="126" value="25.662" /><Key frame="143" value="15.0271" /><Key frame="159" value="38.4942" /><Key frame="177" value="20.4764" /><Key frame="193" value="93.3386" /><Key frame="210" value="5.35899" /><Key frame="227" value="25.8378" /><Key frame="244" value="26.7167" /><Key frame="259" value="29.4413" /><Key frame="276" value="36.6484" /><Key frame="299" value="67.2348" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="12" value="0.57" /><Key frame="21" value="0.745455" /><Key frame="34" value="0.26" /><Key frame="48" value="0.82" /><Key frame="65" value="0.514873" /><Key frame="78" value="0.78" /><Key frame="92" value="0.3" /><Key frame="110" value="0.81" /><Key frame="126" value="0.45" /><Key frame="143" value="0.83" /><Key frame="159" value="0.43" /><Key frame="177" value="0.91" /><Key frame="193" value="0.51" /><Key frame="210" value="0.514873" /><Key frame="227" value="0.6944" /><Key frame="244" value="0.7988" /><Key frame="276" value="0.5424" /><Key frame="299" value="0.410207" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="21" value="-46.3165" /><Key frame="34" value="-64.7738" /><Key frame="48" value="-44.5587" /><Key frame="65" value="-44.7345" /><Key frame="78" value="-48.6017" /><Key frame="92" value="-49.217" /><Key frame="110" value="-64.6859" /><Key frame="126" value="-65.0375" /><Key frame="143" value="-50.4474" /><Key frame="159" value="-57.9182" /><Key frame="177" value="-55.6331" /><Key frame="193" value="9.05525" /><Key frame="210" value="18.3718" /><Key frame="227" value="60.2082" /><Key frame="244" value="66.6243" /><Key frame="259" value="70.4037" /><Key frame="276" value="70.931" /><Key frame="299" value="84.9937" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="21" value="-34.5438" /><Key frame="34" value="-73.6557" /><Key frame="48" value="-31.2919" /><Key frame="65" value="-74.7983" /><Key frame="78" value="-30.2372" /><Key frame="92" value="-80.4233" /><Key frame="110" value="-13.1862" /><Key frame="126" value="-58.1867" /><Key frame="143" value="-22.1511" /><Key frame="159" value="-77.2592" /><Key frame="177" value="-18.7233" /><Key frame="193" value="-51.5948" /><Key frame="210" value="-11.7799" /><Key frame="227" value="-20.7449" /><Key frame="244" value="-23.8211" /><Key frame="259" value="-20.1296" /><Key frame="276" value="-21.2722" /><Key frame="299" value="-7.03374" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="12" value="-10.7" /><Key frame="21" value="-7" /><Key frame="34" value="-6.85796" /><Key frame="65" value="-6.85796" /><Key frame="92" value="-7.4732" /><Key frame="126" value="-7.91266" /><Key frame="143" value="-8.00055" /><Key frame="177" value="-8.35212" /><Key frame="210" value="-12.9225" /><Key frame="227" value="37.9668" /><Key frame="244" value="30.3202" /><Key frame="276" value="5.00743" /><Key frame="299" value="9.22623" /></ActuatorCurve></ActuatorList></Timeline><Resource name="Standing" type="Lock" timeout="1" /><Resource name="All motors" type="Lock" timeout="1" /></Box><Box name="Basic Awareness" id="18" localization="8" tooltip="This box is an interface to the module ALBasicAwareness.&#x0A;&#x0A;It is a simple way to make the robot establish and keep eye contact with people.&#x0A;&#x0A;V1.1.0" x="233" y="413"><bitmap>media/images/box/tracker/basicawareness.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        try:
            self.awareness = ALProxy('ALBasicAwareness')
        except Exception as e:
            self.awareness = None
            self.logger.error(e)

        self.memory = ALProxy('ALMemory')

        self.isRunning = False
        self.trackedHuman = -1

        import threading
        self.subscribingLock = threading.Lock()

        self.BIND_PYTHON(self.getName(), "setParameter")


    def onUnload(self):
        if self.isRunning:
            if self.awareness:
                self.awareness.stopAwareness()
                self.setALMemorySubscription(False)
            self.isRunning = False


    def onInput_onStart(self):
        if self.isRunning:
            return # already running, nothing to do

        self.isRunning = True
        self.trackedHuman = -1
        if self.awareness:
            self.awareness.setEngagementMode(self.getParameter('Engagement Mode'))
            self.awareness.setTrackingMode(self.getParameter('Tracking Mode'))
            self.awareness.setStimulusDetectionEnabled('Sound', self.getParameter('Sound Stimulus'))
            self.awareness.setStimulusDetectionEnabled('Movement', self.getParameter('Movement Stimulus'))
            self.awareness.setStimulusDetectionEnabled('People', self.getParameter('People Stimulus'))
            self.awareness.setStimulusDetectionEnabled('Touch', self.getParameter('Touch Stimulus'))
            self.setALMemorySubscription(True)
            self.awareness.startAwareness()



    def onInput_onStop(self):
        if not self.isRunning:
            return # already stopped, nothing to do

        self.onUnload()
        self.onStopped()


    def setParameter(self, parameterName, newValue):
        GeneratedClass.setParameter(self, parameterName, newValue)

        if self.awareness:
            if parameterName == 'Sound Stimulus':
                self.awareness.setStimulusDetectionEnabled('Sound', newValue)
            elif parameterName == 'Movement Stimulus':
                self.awareness.setStimulusDetectionEnabled('Movement', newValue)
            elif parameterName == 'People Stimulus':
                self.awareness.setStimulusDetectionEnabled('People', newValue)
            elif parameterName == 'Touch Stimulus':
                self.awareness.setStimulusDetectionEnabled('Touch', newValue)


    # callbacks for ALBasicAwareness events
    def onStimulusDetected(self, eventName, stimulusName, subscriberIdentifier):
        self.StimulusDetected(stimulusName)

    def onHumanTracked(self, eventName, humanID, subscriberIdentifier):
        self.trackedHuman = humanID
        self.HumanTracked(humanID)

    def onHumanLost(self, eventName, subscriberIdentifier):
        self.HumanLost(self.trackedHuman)
        self.trackedHuman = -1


    def setALMemorySubscription(self, subscribe):
        self.subscribingLock.acquire()
        if subscribe:
            self.memory.subscribeToEvent('ALBasicAwareness/StimulusDetected', self.getName(), 'onStimulusDetected')
            self.memory.subscribeToEvent('ALBasicAwareness/HumanTracked', self.getName(), 'onHumanTracked')
            self.memory.subscribeToEvent('ALBasicAwareness/HumanLost', self.getName(), 'onHumanLost')
        else:
            self.memory.unsubscribeToEvent('ALBasicAwareness/StimulusDetected', self.getName())
            self.memory.unsubscribeToEvent('ALBasicAwareness/HumanTracked', self.getName())
            self.memory.unsubscribeToEvent('ALBasicAwareness/HumanLost', self.getName())

        self.subscribingLock.release()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the Basic Awareness with the given Engagement and Tracking mode parameters, using the given stimuli." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the Basic Awareness." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Output name="StimulusDetected" type="3" type_size="1" nature="2" inner="0" tooltip="This output is stimulated when BasicAwareness detects a stimulus amongst the tracked stimulus.&#x0A;&#x0A;The output data is the stimulus&apos; name." id="5" /><Output name="HumanTracked" type="2" type_size="1" nature="2" inner="0" tooltip="This output is triggered when ALBasicAwareness detects a stimulus that is confirmed to be a human.&#x0A;&#x0A;The output data is the ID corresponding to the tracked human. It is shared with PeoplePerception and can be used there. This output is triggered with -1 if ALBasicAwareness tried to detect a human but failed." id="6" /><Output name="HumanLost" type="2" type_size="1" nature="2" inner="0" tooltip="This output is triggered when the human currently tracked is lost.&#x0A;&#x0A; The output data is the ID corresponding to the lost human. It can be reused in PeoplePerception." id="7" /><Parameter name="Engagement Mode" inherits_from_parent="0" content_type="3" value="FullyEngaged" default_value="Unengaged" custom_choice="0" tooltip='The engagement mode specifies how &quot;focused&quot; the robot is on the engaged person.' id="8"><Choice value="Unengaged" /><Choice value="FullyEngaged" /><Choice value="SemiEngaged" /></Parameter><Parameter name="Tracking Mode" inherits_from_parent="0" content_type="3" value="WholeBody" default_value="Head" custom_choice="0" tooltip="The tracking mode describes how the robot keeps eye contact with an engaged person." id="9"><Choice value="Head" /><Choice value="BodyRotation" /><Choice value="WholeBody" /></Parameter><Parameter name="Sound Stimulus" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="10" /><Parameter name="Movement Stimulus" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="11" /><Parameter name="People Stimulus" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="12" /><Parameter name="Touch Stimulus" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="13" /></Box><Box name="Dab" id="20" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="933" y="435"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="153"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram /></BehaviorKeyframe></BehaviorLayer><ActuatorList model="juliette"><ActuatorCurve name="" actuator="HeadPitch" mute="0" unit="0"><Key frame="43" value="8.4375" /><Key frame="110" value="8.4375" /><Key frame="153" value="-13.2715" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="43" value="0.175782" /><Key frame="110" value="0.175782" /><Key frame="153" value="0.351564" /></ActuatorCurve><ActuatorCurve name="" actuator="HipPitch" mute="0" unit="0"><Key frame="43" value="-35.7715" /><Key frame="110" value="-35.7715" /><Key frame="153" value="-2.02149" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="43" value="-0.527345" /><Key frame="110" value="-0.527345" /><Key frame="153" value="-0.878909" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="43" value="13.0957" /><Key frame="110" value="13.0957" /><Key frame="153" value="-0.351564" /></ActuatorCurve><ActuatorCurve name="" actuator="LElbowRoll" mute="0" unit="0"><Key frame="43" value="-60.9961" /><Key frame="110" value="-60.9961" /><Key frame="153" value="-29.707" /></ActuatorCurve><ActuatorCurve name="" actuator="LElbowYaw" mute="0" unit="0"><Key frame="43" value="-38.7598" /><Key frame="110" value="-38.7598" /><Key frame="153" value="-70.8398" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="43" value="0.594903" /><Key frame="110" value="0.594903" /><Key frame="153" value="0.594025" /></ActuatorCurve><ActuatorCurve name="" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="43" value="-26.1914" /><Key frame="110" value="-26.1914" /><Key frame="153" value="89.3848" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="43" value="6.76758" /><Key frame="110" value="6.76758" /><Key frame="153" value="7.99804" /></ActuatorCurve><ActuatorCurve name="" actuator="LWristYaw" mute="0" unit="0"><Key frame="43" value="6.76526" /><Key frame="110" value="6.76526" /><Key frame="153" value="1.93121" /></ActuatorCurve><ActuatorCurve name="" actuator="RElbowRoll" mute="0" unit="0"><Key frame="43" value="5.09766" /><Key frame="110" value="5.09766" /><Key frame="153" value="29.4434" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="43" value="-28.916" /><Key frame="110" value="-28.916" /><Key frame="153" value="70.0488" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="43" value="0.539543" /><Key frame="110" value="0.539543" /><Key frame="153" value="0.587873" /></ActuatorCurve><ActuatorCurve name="" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="43" value="-29.0039" /><Key frame="110" value="-29.0039" /><Key frame="153" value="88.9453" /></ActuatorCurve><ActuatorCurve name="" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="43" value="-48.5156" /><Key frame="110" value="-48.5156" /><Key frame="153" value="-7.82226" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="43" value="37.3516" /><Key frame="110" value="37.3516" /><Key frame="153" value="0.876518" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="Switch Case" id="21" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;matching output, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="670" y="459"><bitmap>media/images/box/interaction/choice.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Disco")):
			self.output_1(p)
		elif(p == self.typeConversion("Headbang")):
			self.output_2(p)
		elif(p == self.typeConversion("Dab")):
			self.output_3(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]></content></script><pluginContent><keywords><keyword>&quot;Disco&quot;</keyword><keyword>&quot;Headbang&quot;</keyword><keyword>&quot;Dab&quot;</keyword><keyword></keyword></keywords></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="1" inner="0" tooltip="Value to test." id="2" /><Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If the input value does not match any value set on the box." id="3" /><Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" /><Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" /><Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" /></Box><Box name="Say" id="22" localization="8" tooltip="Say some text. The text can be localized." x="188" y="637"><bitmap>media/images/box/interaction/say.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" /><Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" /><Parameter name="Text" inherits_from_parent="0" content_type="5" value="Hello" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" /></Box><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="3" /><Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="8" /><Link inputowner="3" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="4" /><Link inputowner="6" indexofinput="2" outputowner="3" indexofoutput="9" /><Link inputowner="4" indexofinput="2" outputowner="3" indexofoutput="10" /><Link inputowner="3" indexofinput="4" outputowner="4" indexofoutput="4" /><Link inputowner="7" indexofinput="2" outputowner="3" indexofoutput="11" /><Link inputowner="10" indexofinput="2" outputowner="3" indexofoutput="12" /><Link inputowner="3" indexofinput="4" outputowner="7" indexofoutput="4" /><Link inputowner="3" indexofinput="4" outputowner="10" indexofoutput="4" /><Link inputowner="8" indexofinput="2" outputowner="3" indexofoutput="13" /><Link inputowner="3" indexofinput="5" outputowner="8" indexofoutput="4" /><Link inputowner="19" indexofinput="2" outputowner="3" indexofoutput="14" /><Link inputowner="3" indexofinput="5" outputowner="19" indexofoutput="4" /><Link inputowner="12" indexofinput="2" outputowner="3" indexofoutput="17" /><Link inputowner="13" indexofinput="2" outputowner="3" indexofoutput="16" /><Link inputowner="9" indexofinput="2" outputowner="3" indexofoutput="18" /><Link inputowner="15" indexofinput="2" outputowner="3" indexofoutput="19" /><Link inputowner="11" indexofinput="2" outputowner="3" indexofoutput="20" /><Link inputowner="14" indexofinput="2" outputowner="3" indexofoutput="15" /><Link inputowner="3" indexofinput="6" outputowner="11" indexofoutput="4" /><Link inputowner="3" indexofinput="6" outputowner="16" indexofoutput="4" /><Link inputowner="3" indexofinput="7" outputowner="15" indexofoutput="4" /><Link inputowner="3" indexofinput="7" outputowner="9" indexofoutput="4" /><Link inputowner="3" indexofinput="7" outputowner="12" indexofoutput="4" /><Link inputowner="3" indexofinput="5" outputowner="14" indexofoutput="4" /><Link inputowner="3" indexofinput="5" outputowner="13" indexofoutput="4" /><Link inputowner="18" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="3" /><Link inputowner="3" indexofinput="6" outputowner="20" indexofoutput="4" /><Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="3" indexofinput="6" outputowner="17" indexofoutput="4" /><Link inputowner="21" indexofinput="2" outputowner="3" indexofoutput="21" /><Link inputowner="16" indexofinput="2" outputowner="21" indexofoutput="4" /><Link inputowner="20" indexofinput="2" outputowner="21" indexofoutput="6" /><Link inputowner="17" indexofinput="2" outputowner="21" indexofoutput="5" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box></ChoregrapheProject>